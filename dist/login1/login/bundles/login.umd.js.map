{"version":3,"file":"login.umd.js.map","sources":["ng://login/lib/login.service.ts","ng://login/lib/api.service.ts","ng://login/lib/login.component.ts","ng://login/lib/material-module.ts","ng://login/lib/sign-up/sign-up.component.ts","ng://login/lib/forget-password/forget-password.component.ts","ng://login/lib/reset-password/reset-password.component.ts","ng://login/lib/login.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor() { }\r\n}\r\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\r\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n// for setting observables to get serverurl and endpointurl from app\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport{CookieService} from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({   \r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  public lengthis;\r\n  public percentageis;\r\n  public inprogress;\r\n  public progress: any = [];\r\n  public uploadtype;\r\n  public uploaderror: any = '';\r\n  public accesstoken:any=this.cookieService.get('jwtToken');\r\n  // public accesstoken:any='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NjgzNTgyMTAsImlhdCI6MTU2ODI3MTgxMH0.2ltvxVKwfX1uwMOwQ2Zzgp1K2jiaCDj051Wyho0Iw-Q';\r\n  fileservername: any = [];\r\n  serverUrl: any;\r\n  addendpointUrl: any;\r\n  uploadEndpointUrl:any; //souresh\r\n  updateendpointUrl: any;\r\n  deletesingle_endpointUrl: any;\r\n  updatestatus_single_endpointUrl: any;\r\n  deletemultiple_endpointUrl: any;\r\n  updatestatus_multiple_endpointUrl: any;\r\n  getdata_endpointUrl: any;\r\n  private subjectForServerUrl = new Subject<any>();\r\n  private subjectForaddEndpointUrl = new Subject<any>();\r\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\r\n  private subjectForupdateEndpointUrl = new Subject<any>();\r\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\r\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\r\n  private subjectForGetdataEndpointUrl = new Subject<any>();\r\n  public subscriptionServer: Subscription;\r\n  public subscriptionaddEndpoint: Subscription;\r\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\r\n  public subscriptionupdateEndpoint: Subscription;\r\n  public subscriptiondeletesingleEndpoint: Subscription;\r\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\r\n  public subscriptionGetdataEndpoint: Subscription;\r\n\r\n  constructor(private _http: HttpClient,\r\n    private _authHttp: HttpClient,private cookieService :CookieService) {\r\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\r\n     let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.serverUrl = result;\r\n      } else {\r\n        this.serverUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.addendpointUrl = result;\r\n      } else {\r\n        this.addendpointUrl = null;\r\n      }\r\n    });\r\n    /*********added by souresh***********/\r\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\r\n      let result:any;\r\n      result=message;\r\n        if(result!=null){\r\n          this.uploadEndpointUrl = result;\r\n        } else{\r\n          this.uploadEndpointUrl = null;\r\n        }\r\n    })\r\n    /************souresh end here**************/\r\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.updateendpointUrl = result;\r\n      } else {\r\n        this.updateendpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.deletesingle_endpointUrl = result;\r\n      } else {\r\n        this.deletesingle_endpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.updatestatus_single_endpointUrl = result;\r\n      } else {\r\n        this.updatestatus_single_endpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.getdata_endpointUrl = result;\r\n      } else {\r\n        this.getdata_endpointUrl = null;\r\n      }\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  setServerUrl(value: any) {\r\n    this.subjectForServerUrl.next(value);\r\n  }\r\n  public clearServerUrl() {\r\n    this.subjectForServerUrl.next(null);\r\n  }\r\n  public getServerUrl(): Observable<any> {\r\n    return this.subjectForServerUrl.asObservable();\r\n  }\r\n\r\n  setaddEndpoint(value: any) {\r\n    this.subjectForaddEndpointUrl.next(value);\r\n  }\r\n  public clearaddEndpoint() {\r\n    this.subjectForaddEndpointUrl.next(null);\r\n  }\r\n  public getaddEndpoint(): Observable<any> {\r\n    return this.subjectForaddEndpointUrl.asObservable();\r\n  }\r\n/*****added by souresh******/\r\n  setuploadEndpont(value:any){\r\n    this.subjectForuploadEndpointUrl.next(value);\r\n  }\r\n  public clearuploadEndpoint(){\r\n    this.subjectForuploadEndpointUrl.next(null);\r\n  }\r\n  public getuploadEndpoint(): Observable <any> {\r\n    return this.subjectForuploadEndpointUrl.asObservable();\r\n  }\r\n   /********souresh end here********/\r\n\r\n\r\n  setupdateEndpoint(value: any) {\r\n    this.subjectForupdateEndpointUrl.next(value);\r\n  }\r\n  public clearupdateEndpoint() {\r\n    this.subjectForupdateEndpointUrl.next(null);\r\n  }\r\n  public getupdateEndpoint(): Observable<any> {\r\n    return this.subjectForupdateEndpointUrl.asObservable();\r\n  }\r\n\r\n  setdeletesingleEndpoint(value: any) {\r\n    this.subjectFordeletesingleEndpointUrl.next(value);\r\n  }\r\n  public cleardeletesingleEndpoint() {\r\n    this.subjectFordeletesingleEndpointUrl.next(null);\r\n  }\r\n  public getdeletesingleEndpoint(): Observable<any> {\r\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\r\n  }\r\n\r\n  setupdatestatus_singleEndpoint(value: any) {\r\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\r\n  }\r\n  public clearupdatestatus_singleEndpoint() {\r\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\r\n  }\r\n  public getupdatestatus_singleEndpoint(): Observable<any> {\r\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\r\n  }\r\n\r\n  setgetdataEndpoint(value: any) {\r\n    this.subjectForGetdataEndpointUrl.next(value);\r\n  }\r\n  public cleargetdataEndpoint() {\r\n    this.subjectForGetdataEndpointUrl.next(null);\r\n  }\r\n  public getdataEndpoint(): Observable<any> {\r\n    return this.subjectForGetdataEndpointUrl.asObservable();\r\n  }\r\n\r\n\r\n\r\n  isTokenExpired() {\r\n\r\n    // const helper = new JwtHelperService();\r\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\r\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\r\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\r\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\r\n    // console.log('id_token isExpired:',isIdTokenExpired)\r\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\r\n  }\r\n\r\n  addData(requestdata: any) {\r\n    console.log('in adddata apiservice');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken          //hard code written access-token(temp)\r\n      })\r\n    };\r\n\r\n    // console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\r\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  /*******added by souresh************/\r\n  uploadFile(requestdata:any){\r\n    const httpOptions={\r\n        headers: new HttpHeaders({\r\n          'Content-Type':'application/json',\r\n          'access-token':this.accesstoken          //hard code written access-token(temp)\r\n        })\r\n    };\r\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\r\n    return result;\r\n  }\r\n  /*******souresh end here********/\r\n  UpdateData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken          //hard code written access-token(temp)\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  getData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n/*************** Added by himadri start here ***************/ \r\n  addLogin(requestdata: any) {\r\n    console.log('in addLogin apiservice');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n        // 'Authorization': this.accesstoken          //hard code written access-token(temp)\r\n      })\r\n    };\r\n\r\n    // console.log(this.serverUrl,requestdata);\r\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  /*************** Added by himadri end here ***************/ \r\n\r\n/*************** Added by himadri start here ***************/ \r\nforgetPassword(requestdata: any) {\r\n  console.log('in forgetPassword apiservice');\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n      // 'Authorization': this.accesstoken          //hard code written access-token(temp)\r\n    })\r\n  };\r\n\r\n  // console.log(this.serverUrl,requestdata);\r\n  var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n  return result;\r\n}\r\n/*************** Added by himadri end here ***************/ \r\n\r\n\r\n  deleteSingleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteMultipleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForSingleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForMultipleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  CustomRequest(requestdata: any, endpoint:any ) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators, MinLengthValidator, FormGroupDirective } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from './api.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'lib-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public message: any = '';\r\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n\r\n  public fromTitleValue: any = '';\r\n  public serverURL: any = '';\r\n  public signUpRouteingUrlValue: any = '';\r\n  public forgetRouteingUrlValue: any = '';\r\n  public routerStatusValue: any = '';\r\n  public endpointValue: any;\r\n  public logoValue: any = '';\r\n  public cookieSetValue: any = '';\r\n  public buttonNameValue: any = '';\r\n\r\n  @Input()         // Set the project name\r\n  set fromTitle(fromTitleVal: any) {\r\n    this.fromTitleValue = (fromTitleVal) || '<no name set>';\r\n    this.fromTitleValue = fromTitleVal;\r\n\r\n  }\r\n  @Input()      // set the from logo\r\n\r\nset logo(logoVal : any) {\r\n  this.logoValue = logoVal;\r\n}\r\n@Input()\r\nset buttonName (buttonNameVal :any){\r\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\r\n  this.buttonNameValue = buttonNameVal\r\n}\r\n\r\n  @Input()        // setting the server url from project\r\n  set fullUrl(fullUrlVal: any) {\r\n    this.serverURL = (fullUrlVal) || '<no name set>';\r\n    this.serverURL = fullUrlVal;\r\n\r\n  }\r\n  @Input()\r\n\r\n  set endpoint(endpointVal: any) {\r\n    this.endpointValue = endpointVal;\r\n  }\r\n\r\n@Input()\r\n\r\npublic set cookieSet(v : any) {\r\n  this.cookieSetValue = v;\r\n  // console.log(this.cookieSetValue.cookie);\r\n  // for (const key in this.cookieSetValue.cookie) {\r\n            \r\n  //   console.log(this.cookieSetValue.cookie[key]);\r\n  // }\r\n\r\n}\r\n\r\n\r\n\r\n  @Input()          // setting the navigate By Sign Up Url from project\r\n  set signUpRouteingUrl(routeingUrlval: any) {\r\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.signUpRouteingUrlValue = routeingUrlval;\r\n    console.log(this.signUpRouteingUrlValue)\r\n  }\r\n\r\n\r\n  @Input()          // setting the navigate By Forget Password Url from project\r\n  set forgetRouteingUrl(routeingUrlval: any) {\r\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.forgetRouteingUrlValue = routeingUrlval;\r\n    console.log(this.forgetRouteingUrlValue)\r\n  }\r\n\r\n  @Input()          // setting the navigate By Forget Password Url from project\r\n  set routerStatus(routerStatusval: any) {\r\n    this.routerStatusValue = (routerStatusval) || '<no name set>';\r\n    this.routerStatusValue = routerStatusval;\r\n    // console.log(this.routerStatusValue);\r\n    // console.log(this.routerStatusValue.data.length);\r\n  }\r\n\r\n\r\n\r\n\r\n  public loginForm: FormGroup;\r\n  public project_name: any = '';\r\n\r\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public apiService: ApiService, public cookieService: CookieService) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\r\n      password: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.clearServerUrl();       // Clear the server url\r\n    setTimeout(() => {\r\n      this.apiService.setServerUrl(this.serverURL);       // set the server url \r\n    }, 50);\r\n    // console.log(this.serverURL);\r\n\r\n\r\n    this.apiService.clearaddEndpoint();       // clear the endpoint \r\n    setTimeout(() => {\r\n      this.apiService.setaddEndpoint(this.endpointValue);       // set the endpoint\r\n    }, 50);\r\n    // console.log(this.addEndpointData.endpoint);\r\n\r\n  }\r\n\r\n/********* Login Form Submit start here*********/ \r\n  loginFormSubmit() {\r\n    let x: any;\r\n/****************** test*******************/ \r\n// for (const key in this.cookieSetValue.cookie) {\r\n//   console.log(this.cookieSetValue.cookie[key].type);\r\n//   if (result.token == this.cookieSetValue.cookie[key].type) {\r\n//     console.log('+++++++++++++++');\r\n//   }\r\n// }\r\n\r\n\r\n    // use for validation checking\r\n\r\n    for (x in this.loginForm.controls) {\r\n      this.loginForm.controls[x].markAsTouched();\r\n    }\r\n\r\n    if (this.loginForm.valid) {\r\n      let data: any = this.loginForm.value;\r\n      this.apiService.addLogin(data).subscribe((response) => {\r\n        // console.log(response);\r\n        let result: any = {};\r\n        result = response;\r\n      //   let cookiekeyarr:any = [];\r\n      //   let cookievaluearr:any = [];\r\n      //   for(let j in result.item){\r\n      //     // console.log(Object.values(result.item[j]));\r\n      //     // cookiekeyarr = Object.keys(result.item[j]);\r\n      //     // cookievaluearr = Object.values(result.item[j]);\r\n      //     cookievaluearr.push(Object.keys(result.item[j]), Object.values(result.item[j]));\r\n      //   }\r\n      //   // console.log('cookiekeyarr'+cookiekeyarr);\r\n      //   console.log(cookievaluearr);\r\n      // //   setTimeout(()=>{\r\n      //   // for (let key in cookiekeyarr){\r\n      //     for(let value in cookievaluearr[0]){\r\n      //       console.log('hi'+value);\r\n      //       // this.cookieService.set(cookiekeyarr[key],cookievaluearr[value]);\r\n      //     }\r\n      //   // }\r\n      // // },2000);\r\n      //   // setTimeout(()=>{\r\n      //   //   console.log(this.cookieService.getAll());\r\n      //   // },4000);\r\n        \r\n\r\n        if (result.status == \"success\") {\r\n          // for (const key in this.cookieSetValue.cookie) {\r\n          //   console.log(this.cookieSetValue.cookie[key].type);\r\n          //   if (result == this.cookieSetValue.cookie[key].type) {\r\n          //     console.log('+++++++++++++++');\r\n          //   }\r\n          // }\r\n          this.cookieService.set('user_details', JSON.stringify(result.item[0]));\r\n          this.cookieService.set('jwtToken', result.token);\r\n\r\n          setTimeout(() => {\r\n            // console.log(this.cookieService.getAll());\r\n          }, 1000);\r\n\r\n          // console.log('result')\r\n          // console.log(result.item[0].type)\r\n          for (const key in this.routerStatusValue.data) {\r\n            // console.log(this.routerStatusValue.data[key].type);\r\n\r\n            if (result.item[0].type === this.routerStatusValue.data[key].type) {\r\n              this.router.navigateByUrl('/' + this.routerStatusValue.data[key].routerNav)     // navigate to dashboard url \r\n            }\r\n          }\r\n\r\n\r\n          // this is use for reset the from\r\n          this.formDirective.resetForm();\r\n          this.message = '';\r\n        } else {\r\n          // display error message on html\r\n          this.message = result.msg;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  inputUntouched(val: any) {\r\n    this.loginForm.controls[val].markAsUntouched();\r\n  }\r\n\r\n  // This is use for navigate this component to forget component \r\n  forgetpassword() {\r\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\r\n  }\r\n\r\n  // This is use for navigate this component to sign-Up component \r\n  signup() {\r\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue.path);\r\n  }\r\n\r\n  customFunction(link: any) {\r\n    this.router.navigateByUrl('/'+ link);\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2019 Google Inc. All Rights Reserved.\r\n Use of this source code is governed by an MIT-style license that\r\n can be found in the LICENSE file at http://angular.io/license */\r\n","import { Component, OnInit, Input, Inject, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\r\nimport { ApiService } from '../api.service';\r\n\r\n\r\n\r\nexport interface DialogData {\r\n  value: string;\r\n  Url: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'lib-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  public value: any='';\r\n  public link: any='';\r\n  public Url: any='';\r\n  public message: any = '';\r\n\r\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n\r\n  public formTitleValue: any = '';\r\n  public serverUrlValue: any = '';\r\n  public forgetRouteingUrlValue: any = '';\r\n  public loginRouteingUrlValue: any = '';\r\n  public addEndpointValue: any = '';\r\n  public logoValue: any = '';\r\n  public typevalue: any = '';\r\n  public buttonNameValue: any = '';\r\n\r\n  @Input()         // Set the Form name\r\n  set formTitle(formTitleVal: any) {\r\n    this.formTitleValue = (formTitleVal) || '<no name set>';\r\n    this.formTitleValue = formTitleVal;\r\n    // console.log(this.formTitleValue);\r\n\r\n  }\r\n\r\n  @Input()\r\n  set buttonName (buttonNameVal :any){\r\n    this.buttonNameValue = (buttonNameVal) || '<no name set>';\r\n    this.buttonNameValue = buttonNameVal\r\n  }\r\n\r\n  @Input()        // setting the server url from project\r\n  set serverUrl(serverUrlVal: any) {\r\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\r\n    this.serverUrlValue = serverUrlVal;\r\n    // console.log(this.serverUrlValue);\r\n\r\n  }\r\n@Input()      // set the from logo\r\n\r\nset logo(logoVal : any) {\r\n  this.logoValue = logoVal;\r\n}\r\n\r\n@Input()      // set the from logo\r\n\r\nset modaleLogo(modaleLogoVal : any) {\r\n  this.link = modaleLogoVal;\r\n}\r\n\r\n@Input()\r\nset userType(typeval: any) {\r\n  this.typevalue = typeval;\r\n}\r\n\r\n\r\n  @Input()        // set the endpoint And source\r\n  public set addEndpoint(addEndpointVal: any) {\r\n    this.addEndpointValue = addEndpointVal;\r\n    console.log(this.addEndpointValue)\r\n  }\r\n\r\n\r\n  @Input()          // setting the navigate By Forget Password Url from project\r\n  set forgetRouteingUrl(routeingUrlval: any) {\r\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.forgetRouteingUrlValue = routeingUrlval;\r\n    // console.log(this.forgetRouteingUrlValue);\r\n  }\r\n\r\n  @Input()          // setting the navigate By login Url from project\r\n  set loginRouteingUrl(routeingUrlval: any) {\r\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.loginRouteingUrlValue = routeingUrlval;\r\n    // console.log(this.loginRouteingUrlValue);\r\n  }\r\n\r\n\r\n\r\n  public signUpForm: FormGroup;\r\n\r\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public dialog: MatDialog, public apiService: ApiService) {\r\n    this.signUpForm = this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\r\n      firstname: ['', Validators.required],\r\n      lastname: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.clearServerUrl();       //  Clear the server url\r\n    setTimeout(() => {\r\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\r\n    }, 50);\r\n    // console.log(this.serverURL);\r\n\r\n\r\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\r\n    setTimeout(() => {\r\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\r\n    }, 50);\r\n  }\r\n\r\n\r\n/********* Sign Up Form Submit start here*********/ \r\n  signUpFormSubmit() {\r\n    // use for validation checking\r\n    for (let x in this.signUpForm.controls) {\r\n      this.signUpForm.controls[x].markAsTouched();\r\n    }\r\n    if (this.signUpForm.valid) {\r\n      // let link: any = this.fullUrlValue;\r\n      let allData: any = this.signUpForm.value;\r\n      allData.type = this.typevalue;\r\n      console.log(allData);\r\n\r\n      let data: any = {\r\n        'data': allData,\r\n        \"source\": this.addEndpointValue.source\r\n      };\r\n      console.log(data);\r\n      this.apiService.addData(data).subscribe((response) => {\r\n        let result: any = {};\r\n        result = response;\r\n        console.log(result);\r\n\r\n        if (result.status == \"success\") {\r\n          const dialogRef = this.dialog.open(successModalComponent, {\r\n            width: '250px',\r\n            data: {value: result.status, Url: this.link}\r\n          });\r\n          // this.router.navigateByUrl('/' + )     // navigate to dashboard url \r\n\r\n\r\n          // this is use for reset the from\r\n          this.formDirective.resetForm();\r\n        } else {\r\n          // display error message on html\r\n          this.message = result.msg;\r\n        }\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n\r\n/********* Sign Up Form Submit end here*********/ \r\n\r\n  // This is use for navigate this component to forget component \r\n  forgetpassword() {\r\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\r\n  }\r\n\r\n\r\n  // This is use for navigate this component to forget component \r\n  login() {\r\n    this.router.navigateByUrl('/' + this.loginRouteingUrlValue.path);\r\n  }\r\n\r\n  inputUntouched(val: any) {\r\n    this.signUpForm.controls[val].markAsUntouched();\r\n  }\r\n  customFunction(link: any) {\r\n    this.router.navigateByUrl('/'+ link);\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'successModal',\r\n  templateUrl: '../successModal.html',\r\n\r\n})\r\nexport class successModalComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<successModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n      console.log(data)\r\n     }\r\n\r\n    \r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '../api.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'lib-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.css']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n  public message: any = '';\r\n  public buttonNameValue: any = '';\r\n\r\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n\r\n  public forgetPasswordForm: FormGroup;\r\n  public formTitleValue: any = '';          // This is From title\r\n  public serverUrlValue: any = '';          //  This is Server url\r\n  public signUpRouteingUrlValue: any = '';  // setting the navigate By Sign Up Url from project\r\n  public loginRouteingUrlValue: any = '';  // setting the navigate By login Url from project\r\n  private domanUrlValue: any = '';          // This is reset password url\r\n  public addEndpointValue: any = '';        // This is endpoint url\r\n  public logoValue: any = '';               // This is from logo url\r\n  public durationInSeconds = 5;             // This is SnackBar set time\r\n  public static_msg:any='Please enter your valid email address and you will be sent a link to reset your password. You must use the same email id you have registered with us. If you no longer have the same email address then you must contact us directly with proof of your identity.';\r\n\r\n  @Input()\r\nset buttonName (buttonNameVal :any){\r\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\r\n  this.buttonNameValue = buttonNameVal\r\n}\r\n\r\n  @Input()         // Set the project email Doman URL\r\n  set domanUrl(domanUrlVal: any) {\r\n    this.domanUrlValue = (domanUrlVal) || '<no name set>';\r\n    this.domanUrlValue = domanUrlVal;\r\n    // console.log(this.domanUrlValue);\r\n  }\r\n  @Input()         // Set the project name\r\n  set formTitle(formTitleVal: any) {\r\n    this.formTitleValue = (formTitleVal) || '<no name set>';\r\n    this.formTitleValue = formTitleVal;\r\n\r\n  }\r\n\r\n  @Input()        // setting the server url from project\r\n  set serverUrl(serverUrlVal: any) {\r\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\r\n    this.serverUrlValue = serverUrlVal;\r\n\r\n  }\r\n\r\n  @Input()      // set the from logo\r\n\r\n  set logo(logoVal: any) {\r\n    this.logoValue = logoVal;\r\n  }\r\n\r\n  @Input()          // set the endpoint and source\r\n\r\n  set addEndpoint(addEndpointval: any) {\r\n    this.addEndpointValue = addEndpointval;\r\n  }\r\n\r\n\r\n  @Input()          // setting the navigate By Sign Up Url from project\r\n  set signUpRouteingUrl(routeingUrlval: any) {\r\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.signUpRouteingUrlValue = routeingUrlval;\r\n    // console.log(this.signUpRouteingUrlValue)\r\n  }\r\n\r\n  @Input()          // setting the navigate By Sign Up Url from project\r\n  set loginRouteingUrl(routeingUrlval: any) {\r\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.loginRouteingUrlValue = routeingUrlval;\r\n    // console.log(this.loginRouteingUrlValue)\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public router: Router,\r\n    public apiService: ApiService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n\r\n\r\n\r\n    this.forgetPasswordForm = this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.clearServerUrl();       //  Clear the server url\r\n    setTimeout(() => {\r\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\r\n    }, 50);\r\n    // console.log(this.serverURL);\r\n\r\n\r\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\r\n    setTimeout(() => {\r\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\r\n    }, 50);\r\n  }\r\n\r\n  /********* Forget password  Form Submit start here*********/\r\n  forgetPasswordSubmit() {\r\n    let x: any;\r\n\r\n    //  This for-loop use for from blank or properly validated checking  \r\n    for (x in this.forgetPasswordForm.controls) {\r\n      this.forgetPasswordForm.controls[x].markAsTouched();\r\n    }\r\n    if (this.forgetPasswordForm.valid) {    //    validation checking\r\n\r\n      this.openSnackBar();              // open snack-bar function\r\n\r\n      let link: any = this.serverUrlValue;\r\n      let data: any = this.forgetPasswordForm.value;\r\n\r\n      data.domanUrl = this.domanUrlValue;\r\n\r\n      this.apiService.forgetPassword(data).subscribe((response) => {\r\n        // console.log(response);\r\n        let result: any = {};\r\n        result = response;\r\n\r\n        if (result.status == \"success\") {\r\n          this.openSnackBar();             // open snack-bar function\r\n          // this is use for reset the from\r\n          this.formDirective.resetForm();\r\n          this.message = '';         // clear the from\r\n        } else {\r\n\r\n          // display error message on html\r\n          this.message = result.msg;      // show the error message\r\n\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /********* Forget password  Form Submit end here*********/\r\n\r\n\r\n  /********* openSnackBar function open start here*********/\r\n\r\n\r\n  openSnackBar() {\r\n    this.snackBar.openFromComponent(snackBarComponent, {\r\n      duration: this.durationInSeconds * 1000,\r\n    });\r\n  }\r\n /********* openSnackBar function open end here*********/\r\n\r\n\r\n  // This is use for navigate this component to sign-Up component \r\n  signup() {\r\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue);\r\n  }\r\n\r\n    // This is use for navigate this component to login component \r\n    login() {\r\n      this.router.navigateByUrl('/' + this.loginRouteingUrlValue);\r\n    }\r\n\r\n  inputUntouched(val: any) {\r\n    this.forgetPasswordForm.controls[val].markAsUntouched();\r\n  }\r\n\r\n\r\n  customFunction(link: any) {\r\n    this.router.navigateByUrl('/'+ link);\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'snack-bar-modale',\r\n  templateUrl: 'forget-passwordModale.html',\r\n  styles: [`\r\n    .example {\r\n      color: aliceblue;\r\n      background-color: yellowgreen;\r\n    }\r\n  `],\r\n})\r\nexport class snackBarComponent { }\r\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '../api.service';\r\n\r\n@Component({\r\n  selector: 'lib-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\n\r\n\r\n\r\nexport class ResetPasswordComponent implements OnInit {\r\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n  public resetPasswordForm: FormGroup;\r\n  public fromTitleNameValue: any = '';\r\n  public serverUrlValue: any = '';\r\n  public message: any = '';\r\n  public addEndpointValue: any = '';\r\n\r\n  public logoValue: any = '';\r\n  // public signUpRouteingUrlValue: any = '';\r\n\r\n\r\n  @Input()         // Set the Form name\r\n  set fromTitleName(fromTitleNameVal: any) {\r\n    this.fromTitleNameValue = (fromTitleNameVal) || '<no name set>';\r\n    this.fromTitleNameValue = fromTitleNameVal;\r\n    console.log(this.fromTitleNameValue);\r\n\r\n  }\r\n\r\n\r\n  @Input()        // setting the server url from project\r\n  set serverUrl(serverUrlVal: any) {\r\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\r\n    this.serverUrlValue = serverUrlVal;\r\n    console.log(this.serverUrlValue);\r\n\r\n  }\r\n\r\n  @Input()        // set the endpoint and source\r\n\r\n  public set addEndpoint(addEndpointVal: any) {\r\n    this.addEndpointValue = addEndpointVal;\r\n  }\r\n\r\n  @Input()      // set the from logo\r\n\r\nset logo(logoVal : any) {\r\n  this.logoValue = logoVal;\r\n}\r\n\r\n\r\n  // @Input()          // setting the navigate By Sign Up Url from project\r\n  // set signUpRouteingUrl(routeingUrlval: any) {\r\n  //   this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n  //   this.signUpRouteingUrlValue = routeingUrlval;\r\n  //   console.log(this.signUpRouteingUrlValue);\r\n  // }\r\n  public accesscode: string;\r\n\r\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public route: ActivatedRoute, public apiService: ApiService) {\r\n\r\n    this.route.params.subscribe(params => {\r\n\r\n      this.accesscode = params['token'];\r\n      console.log(this.accesscode);\r\n    })\r\n\r\n    this.resetPasswordForm = this.fb.group({\r\n      // password: ['',  Validators.compose([Validators.required, Validators.minLength(4)])],\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required],\r\n    }, {\r\n      validator: this.machpassword('password', 'confirmPassword')\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.clearServerUrl();       // Clear the server url\r\n    setTimeout(() => {\r\n      this.apiService.setServerUrl(this.serverUrlValue);       // set the server url \r\n    }, 50);\r\n    // console.log(this.serverURL);\r\n\r\n\r\n    this.apiService.clearaddEndpoint();       // clear the endpoint \r\n    setTimeout(() => {\r\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);       // set the endpoint\r\n    }, 50);\r\n    // console.log(this.addEndpointData.endpoint);\r\n\r\n  }\r\n  //  this function is use for mach password and confirm Password \r\n\r\n  machpassword(passwordkye: string, confirmpasswordkye: string) {\r\n    return (group: FormGroup) => {\r\n      let passwordInput = group.controls[passwordkye],\r\n        confirmpasswordInput = group.controls[confirmpasswordkye];\r\n      if (passwordInput.value !== confirmpasswordInput.value) {\r\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\r\n      }\r\n      else {\r\n        return confirmpasswordInput.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n\r\n/********* Reset Password Form Submit start here*********/ \r\n  resetPasswordSubmit() {\r\n    console.log(this.resetPasswordForm.value);\r\n    let x: any;\r\n    for (x in this.resetPasswordForm.controls) {\r\n      this.resetPasswordForm.controls[x].markAsTouched();\r\n    }\r\n    if (this.resetPasswordForm.valid) {\r\n      let data1: any = { \"password\": this.resetPasswordForm.value.password, \"accesscode\": this.accesscode }\r\n      let data: any = {\r\n        'data': data1,\r\n        \"source\": this.addEndpointValue.source\r\n      }\r\n\r\n\r\n      // data.accesscode = this.accesscode;\r\n\r\n      this.apiService.addData(data).subscribe((response) => {\r\n        let result: any = {};\r\n        result = response;\r\n        console.log(result);\r\n        if (result.status == \"success\") {\r\n          this.formDirective.resetForm();       // Use for reset the form\r\n        } else {\r\n          this.message = result.msg;\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n/********* Reset Password Form Submit end here*********/ \r\n\r\n\r\n  inputUntouched(val: any) {\r\n    this.resetPasswordForm.controls[val].markAsUntouched();\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { LoginComponent } from './login.component';\r\nimport { DemoMaterialModule } from './material-module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SignUpComponent, successModalComponent } from './sign-up/sign-up.component';\r\nimport { ForgetPasswordComponent, snackBarComponent } from './forget-password/forget-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ApiService } from './api.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignUpComponent,\r\n    ForgetPasswordComponent,\r\n    ResetPasswordComponent,\r\n    successModalComponent,\r\n    snackBarComponent,\r\n    // commonModalComponent\r\n\r\n  ],\r\n  imports: [\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [LoginComponent, SignUpComponent, ForgetPasswordComponent, ResetPasswordComponent],\r\n  providers: [ApiService],\r\n  bootstrap: [],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  entryComponents: [ successModalComponent, snackBarComponent]\r\n})\r\nexport class LoginModule { }\r\n"],"names":["Injectable","Subject","HttpHeaders","map","HttpClient","CookieService","router","Validators","Component","FormBuilder","Router","ViewChild","FormGroupDirective","Input","NgModule","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","dialog","MatDialog","MatDialogRef","Inject","MAT_DIALOG_DATA","snackBar","MatSnackBar","ActivatedRoute","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","CommonModule","HttpClientModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}

{"version":3,"sources":["ng://team/lib/team.service.ts","ng://team/lib/team.component.ts","ng://team/lib/Service/api.service.ts","ng://team/lib/Service/upload.service.ts","ng://team/lib/Component/add-edit-team/add-edit-team.component.ts","ng://team/lib/material.module.ts","ng://team/lib/Category-Management/addedit-team/addedit-team.component.ts","ng://team/lib/Category-Management/list-team/list-team.component.ts","ng://team/lib/Component/team-list/team-list.component.ts","ng://team/lib/team.module.ts"],"names":["TeamService","Injectable","args","providedIn","TeamComponent","prototype","ngOnInit","Component","selector","template","ApiService","_http","_authHttp","cookieService","_this","this","progress","uploaderror","accesstoken","get","fileservername","subjectForServerUrl","Subject","subjectForaddEndpointUrl","subjectForuploadEndpointUrl","subjectForupdateEndpointUrl","subjectFordeletesingleEndpointUrl","subjectForupdatestatusSingleEndpointUrl","subjectForGetdataEndpointUrl","subscriptionServer","getServerUrl","subscribe","message","result","serverUrl","subscriptionaddEndpoint","getaddEndpoint","addendpointUrl","subscriptionuploadEndpoint","getuploadEndpoint","uploadEndpointUrl","subscriptionupdateEndpoint","getupdateEndpoint","updateendpointUrl","subscriptiondeletesingleEndpoint","getdeletesingleEndpoint","deletesingle_endpointUrl","subscriptionupdatestatusSingleEndpoint","getupdatestatus_singleEndpoint","updatestatus_single_endpointUrl","subscriptionGetdataEndpoint","getdataEndpoint","getdata_endpointUrl","setServerUrl","value","next","clearServerUrl","asObservable","setaddEndpoint","clearaddEndpoint","setuploadEndpont","clearuploadEndpoint","setupdateEndpoint","clearupdateEndpoint","setdeletesingleEndpoint","cleardeletesingleEndpoint","setupdatestatus_singleEndpoint","clearupdatestatus_singleEndpoint","setgetdataEndpoint","cleargetdataEndpoint","isTokenExpired","addData","requestdata","console","log","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","JSON","stringify","pipe","map","res","uploadFile","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","endpoint","HttpClient","CookieService","UploadService","httpClient","SERVER_URL","response","upload","data","userId","reportProgress","observe","event","type","HttpEventType","UploadProgress","uploadPercent","Math","round","loaded","total","status","Response","body","AddEditTeamComponent","fb","activeroute","uploadService","apiservice","router","teamData","allData","listrouteData","editarray","imageConfigData","SingleDataList","ButtonText","HeaderText","flag","img_var","teamForm","group","categoryname","Validators","required","membername","description","multiplephone","array","multipleemail","bulletarray","team_img","Object","defineProperty","getConfig","val","snapshot","params","_id","i","params_id","controls","patchValue","basepath","image","image_name","name","image_type","addBulletListData","bullet_name","bullet_desc","addphone","contactphone","addemail","contactemail","serverUrlval","serverUrlData","endpointUrlval","getDataEndpointData","addEndpointData","setTimeout","inputUntouch","form","markAsUntouched","a","push","removephone","index","removeAt","removeemail","source","ResetForm","reset","b","deleteBulletListData","trackByFn","clear_image","TeamFormSubmit","x","files","length","ErrCode","path","markAsTouched","valid","id","sourceobj","spinnerLoader","navigateByUrl","alert","FormBuilder","ActivatedRoute","Router","Input","MaterialModule","NgModule","declarations","imports","CommonModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","AddeditTeamComponent","apiService","DataListViaResolve","SingledataEdit","listingPageUrl","CategoryManagementTeamForm","categoryName","role","Url","CategoryManagementTeamFormSubmit","parseInt","ResetTeamForm","ListTeamComponent","alldata","addPageVal","searchingendpoint","sourcenameViaapp","tokenVal","deleteendpointVal","addupdate","editRouteval","alldata_skip","alldata_modify_header","rolename","search_settings","selectsearch","label","field","values","textsearch","manageRoute","addButton","manageTeamButton","TeamListComponent","DataList","DelEndpoint","editroute","updatendpoint","collectionName","searchingSource","searchingEndpoint","addPageRoute","data_skip","data_modify_header","images","pendingmodelapplicationarray_detail_datatype","key","fileurl","TeamModule","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","ListingModule","FileUploadModule","providers","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-Team',\n  templateUrl: 'team.component.html',\n  styleUrls: ['style.css']\n \n\n})\nexport class TeamComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ElementRef, EventEmitter, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) { \n      this.subscriptionServer = this.getServerUrl().subscribe(message => {\n        let result: any;\n         result = message;\n         if (result != null) {\n           this.serverUrl = result;\n         } else {\n           this.serverUrl = null;\n         }\n       });\n       this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n         let result: any;\n         result = message;\n         if (result != null) {\n           this.addendpointUrl = result;\n         } else {\n           this.addendpointUrl = null;\n         }\n       });\n       /*********added by souresh***********/\n       this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n         let result:any;\n         result=message;\n           if(result!=null){\n             this.uploadEndpointUrl = result;\n           } else{\n             this.uploadEndpointUrl = null;\n           }\n       })\n       /************souresh end here**************/\n       this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n         let result: any;\n         result = message;\n         if (result != null) {\n           this.updateendpointUrl = result;\n         } else {\n           this.updateendpointUrl = null;\n         }\n       });\n       this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n         let result: any;\n         result = message;\n         if (result != null) {\n           this.deletesingle_endpointUrl = result;\n         } else {\n           this.deletesingle_endpointUrl = null;\n         }\n       });\n       this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n         let result: any;\n         result = message;\n         if (result != null) {\n           this.updatestatus_single_endpointUrl = result;\n         } else {\n           this.updatestatus_single_endpointUrl = null;\n         }\n       });\n       this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n         let result: any;\n         result = message;\n         if (result != null) {\n           this.getdata_endpointUrl = result;\n         } else {\n           this.getdata_endpointUrl = null;\n         }\n       });\n    }\n    setServerUrl(value: any) {\n      this.subjectForServerUrl.next(value);\n    }\n    public clearServerUrl() {\n      this.subjectForServerUrl.next(null);\n    }\n    public getServerUrl(): Observable<any> {\n      return this.subjectForServerUrl.asObservable();\n    }\n  \n    setaddEndpoint(value: any) {\n      this.subjectForaddEndpointUrl.next(value);\n    }\n    public clearaddEndpoint() {\n      this.subjectForaddEndpointUrl.next(null);\n    }\n    public getaddEndpoint(): Observable<any> {\n      return this.subjectForaddEndpointUrl.asObservable();\n    }\n  /*****added by souresh******/\n    setuploadEndpont(value:any){\n      this.subjectForuploadEndpointUrl.next(value);\n    }\n    public clearuploadEndpoint(){\n      this.subjectForuploadEndpointUrl.next(null);\n    }\n    public getuploadEndpoint(): Observable <any> {\n      return this.subjectForuploadEndpointUrl.asObservable();\n    }\n     /********souresh end here********/\n  \n  \n    setupdateEndpoint(value: any) {\n      this.subjectForupdateEndpointUrl.next(value);\n    }\n    public clearupdateEndpoint() {\n      this.subjectForupdateEndpointUrl.next(null);\n    }\n    public getupdateEndpoint(): Observable<any> {\n      return this.subjectForupdateEndpointUrl.asObservable();\n    }\n  \n    setdeletesingleEndpoint(value: any) {\n      this.subjectFordeletesingleEndpointUrl.next(value);\n    }\n    public cleardeletesingleEndpoint() {\n      this.subjectFordeletesingleEndpointUrl.next(null);\n    }\n    public getdeletesingleEndpoint(): Observable<any> {\n      return this.subjectFordeletesingleEndpointUrl.asObservable();\n    }\n  \n    setupdatestatus_singleEndpoint(value: any) {\n      this.subjectForupdatestatusSingleEndpointUrl.next(value);\n    }\n    public clearupdatestatus_singleEndpoint() {\n      this.subjectForupdatestatusSingleEndpointUrl.next(null);\n    }\n    public getupdatestatus_singleEndpoint(): Observable<any> {\n      return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n    }\n  \n    setgetdataEndpoint(value: any) {\n      this.subjectForGetdataEndpointUrl.next(value);\n    }\n    public cleargetdataEndpoint() {\n      this.subjectForGetdataEndpointUrl.next(null);\n    }\n    public getdataEndpoint(): Observable<any> {\n      return this.subjectForGetdataEndpointUrl.asObservable();\n    }\n  \n  \n  \n    isTokenExpired() {\n  \n      // const helper = new JwtHelperService();\n      // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n      // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n      // console.log('refresh_token',localStorage.getItem('refresh_token'))\n      // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n      // console.log('id_token isExpired:',isIdTokenExpired)\n      // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n    }\n  \n    addData(requestdata: any) {\n      console.log('in adddata apiservice');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          // 'access-token': this.accesstoken \n          'Authorization': this.accesstoken         //hard code written access-token(temp)\n        })\n      };\n  \n      console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n      var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n      return result;\n    }\n    /*******added by souresh************/\n    uploadFile(requestdata:any){\n      const httpOptions={\n          headers: new HttpHeaders({\n            'Content-Type':'application/json',\n            'Authorization':this.accesstoken          //hard code written access-token(temp)\n          })\n      };\n      var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n      return result;\n    }\n    /*******souresh end here********/\n    UpdateData(requestdata: any) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': this.accesstoken          //hard code written access-token(temp)\n        })\n      };\n      var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n      return result;\n    }\n  \n    getData(requestdata: any) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': this.accesstoken\n        })\n      };\n      var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n      return result;\n    }\n  \n    deleteSingleData(requestdata: any) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': this.accesstoken\n        })\n      };\n      var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n      return result;\n    }\n  \n    deleteMultipleData(requestdata: any) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': this.accesstoken\n        })\n      };\n      var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n      return result;\n    }\n  \n    UpdateStatusForSingleData(requestdata: any) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': this.accesstoken\n        })\n      };\n      var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n      return result;\n    }\n  \n    UpdateStatusForMultipleData(requestdata: any) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': this.accesstoken\n        })\n      };\n      var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n      return result;\n    }\n    CustomRequest(requestdata: any, endpoint:any ) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': this.accesstoken\n        })\n      };\n      var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n      return result;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { map } from  'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  SERVER_URL: string = \"http://166.62.39.137:5009/uploads\";\n  public response: any = {};\n\n  constructor(private httpClient: HttpClient) { }\n  public upload(data, userId) {\n    return this.httpClient.post<any>(this.SERVER_URL, data, {\n        reportProgress: true,\n        observe: 'events'\n      }).pipe(map((event) => {\n        switch (event.type) {\n          case HttpEventType.UploadProgress:\n            const uploadPercent = Math.round(100 * event.loaded / event.total);\n            this.response = { status: \"process\", data: { total: 100, loaded: uploadPercent } };\n            return this.response;\n          case HttpEventType.Response:\n            return event.body;\n          default:\n            return `Unhandled event: ${event.type}`;\n            // return `Unhandled event: ${event.type}`;\n\n\n        }\n      })\n    );\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, FormControl, FormArray, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../../Service/api.service';\nimport { HttpClient } from '@angular/common/http';\nimport { UploadService } from '../../Service/upload.service';\nimport { NgStyle } from '@angular/common';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n@Component({\n  selector: 'lib-add-edit-team',\n  templateUrl: './add-edit-team.component.html',\n  styleUrls: ['./add-edit-team.component.css']\n})\nexport class AddEditTeamComponent implements OnInit {\n  public teamData: any = [];\n  public allData: any = [];\n  public teamForm: FormGroup;\n  public params_id: any;\n  public getDataEndpointData: any;\n  public addEndpointData: any;\n  public serverUrlData: any;\n  public listrouteData = \"\";\n  public editarray: any = [];\n  public spinnerLoader: boolean;\n  public imageConfigData: any = '';\n  public SingleDataList: any = [];\n  public ButtonText: any = \"Submit\";\n  public HeaderText: any = \"Add Team Member\";\n  public ErrCode: boolean;\n  public flag: boolean = false;\n  public img_var: any = '';\n  public image_name: any;\n  public image_type: any;\n\n  /* Config Upload file lib */\n  @Input()\n  set imageUpload(getConfig: any) {\n    this.imageConfigData = getConfig;\n  }\n  @Input()\n  set singleData(val: any) {\n    this.SingleDataList = (val) || '<no name set>';\n    this.SingleDataList = val;\n    if (this.activeroute.snapshot.params._id) {\n      this.ButtonText = \"Update\";\n      this.HeaderText = \"Edit Team Member\"\n      this.flag = true;\n      this.params_id = this.activeroute.snapshot.params._id;\n      this.teamForm.controls['categoryname'].patchValue(val[0].categoryname);\n      this.teamForm.controls['description'].patchValue(val[0].description);\n      this.teamForm.controls['membername'].patchValue(val[0].membername);\n\n      this.teamForm.controls['team_img'].patchValue(val[0].team_img);\n\n      this.img_var = this.SingleDataList[0].team_img.basepath + this.SingleDataList[0].team_img.image;\n      this.image_name = this.SingleDataList[0].team_img.name;\n      this.image_type = this.SingleDataList[0].team_img.type;\n\n      for (const i in this.SingleDataList[0].bulletarray) {\n        this.addBulletListData(this.SingleDataList[0].bulletarray[i].bullet_name,\n          this.SingleDataList[0].bulletarray[i].bullet_desc);\n      }\n      for (const i in this.SingleDataList[0].multiplephone) {\n        this.addphone(this.SingleDataList[0].multiplephone[i].contactphone);\n      }\n      for (const i in this.SingleDataList[0].multipleemail) {\n        this.addemail(this.SingleDataList[0].multipleemail[i].contactemail);\n      }\n    }\n  }\n\n  @Input()          //setting the server url from project\n  set serverUrl(serverUrlval: any) {\n    this.serverUrlData = (serverUrlval) || '<no name set>';\n    this.serverUrlData = serverUrlval;\n\n  }\n\n  @Input()   //getting the listing route\n  set ListRoute(val: any) {\n    this.listrouteData = (val) || '<no name set>';\n    this.listrouteData = val;\n\n  }\n\n  @Input()          //setting the server url from project\n  set getDataEndpoint(endpointUrlval: any) {\n    this.getDataEndpointData = (endpointUrlval) || '<no name set>';\n    this.getDataEndpointData = endpointUrlval;\n\n  }\n  @Input()          //setting the server url from project\n  set addEndpoint(endpointUrlval: any) {\n    this.addEndpointData = (endpointUrlval) || '<no name set>';\n    this.addEndpointData = endpointUrlval;\n  }\n\n\n  constructor(public fb: FormBuilder, public activeroute: ActivatedRoute,\n    public _http: HttpClient, private uploadService: UploadService,\n    public apiservice: ApiService, public router: Router) {\n\n    this.teamForm = this.fb.group({\n      categoryname: [\"\", Validators.required],\n      membername: [\"\", Validators.required],\n      description: [\"\", Validators.required],\n      multiplephone: this.fb.array([]),\n      multipleemail: this.fb.array([]),\n      bulletarray: this.fb.array([]),\n      team_img: ['']\n    })\n  }\n\n  ngOnInit() {\n    this.apiservice.clearServerUrl();\n    setTimeout(() => {\n      this.apiservice.setServerUrl(this.serverUrlData);\n    }, 50);\n    this.apiservice.cleargetdataEndpoint();\n    setTimeout(() => {\n      this.apiservice.setgetdataEndpoint(this.getDataEndpointData);\n    }, 50);\n    this.apiservice.clearaddEndpoint();\n    setTimeout(() => {\n      this.apiservice.setaddEndpoint(this.addEndpointData);\n    }, 50);\n    setTimeout(() => {\n      this.getData();\n    }, 50);\n\n    if (this.activeroute.snapshot.params._id == null) {\n      this.addBulletListData('', '');\n      this.addphone('');\n      this.addemail('');\n    }\n\n  }\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n  /**for multiple phone function start here**/\n\n  addphone(a: any) {\n    const mphone = this.teamForm.controls.multiplephone as FormArray;\n    mphone.push(this.fb.group({\n      contactphone: [a]\n    }));\n  }\n  removephone(index: any) {\n    const mphone = this.teamForm.controls.multiplephone as FormArray;\n    mphone.removeAt(index);\n\n  }\n  /**multiple phone end here**/\n\n  /**for multiple emails functions start here**/\n  addemail(a: any) {\n    const memail = this.teamForm.controls.multipleemail as FormArray;\n    memail.push(this.fb.group({\n      contactemail: [a]\n    }))\n  }\n  removeemail(index: any) {\n    const mphone = this.teamForm.controls.multipleemail as FormArray;\n    mphone.removeAt(index);\n  }\n\n\n\n  /**multiple email functions end here**/\n  getData() {\n    let data: any = {\n      \"source\": \"Team_category\"\n    }\n    this.apiservice.getData(data).subscribe(response => {\n      let result: any = response;\n      this.allData = result.res;\n    })\n  }\n  /**resetting the form**/\n  ResetForm() {\n    this.teamForm.reset();\n  }\n\n  /**bullet list function start here**/\n  addBulletListData(a: any, b: any) {\n    const bulletlist = this.teamForm.controls.bulletarray as FormArray;\n    bulletlist.push(this.fb.group({\n      bullet_name: [a],\n      bullet_desc: [b],\n    }));\n  }\n\n  deleteBulletListData() {\n    const bulletlist = this.teamForm.controls.bulletarray as FormArray;\n    bulletlist.removeAt(1);\n  }\n  trackByFn(index) {\n    return index;\n  }\n  /**bullet list function end here**/\n  clear_image() {\n    this.flag = false;\n  }\n  TeamFormSubmit() {\n    if (this.imageConfigData.files) {\n      if (this.imageConfigData.files.length > 1) {\n        this.ErrCode = true;\n        return;\n      }\n      this.teamForm.value.team_img =\n        {\n          \"basepath\": this.imageConfigData.files[0].upload.data.basepath + '/'\n            + this.imageConfigData.path + '/',\n          \"image\": this.imageConfigData.files[0].upload.data.data.fileservername,\n          \"name\": this.imageConfigData.files[0].name,\n          \"type\": this.imageConfigData.files[0].type\n        };\n    } else {\n      this.teamForm.value.team_img = false;\n    }\n    let x: any;\n    for (x in this.teamForm.controls) {\n      this.teamForm.controls[x].markAsTouched();\n    }\n    if (this.teamForm.valid) {\n      var data: any;\n      if (this.activeroute.snapshot.params._id) {      //update part\n        data = {\n          \"source\": \"Team_management\",\n          \"data\": {\n            \"id\": this.params_id,\n            \"categoryname\": this.teamForm.value.categoryname,\n            \"membername\": this.teamForm.value.membername,\n            \"description\": this.teamForm.value.description,\n            \"multiplephone\": this.teamForm.value.multiplephone,\n            \"multipleemail\": this.teamForm.value.multipleemail,\n            \"bulletarray\": this.teamForm.value.bulletarray,\n            'team_img': this.teamForm.value.team_img\n          },\n          \"sourceobj\": [\"categoryname\"]\n        };\n      } else {\n        data = {                                         //add part\n          \"source\": \"Team_management\",\n          \"data\": this.teamForm.value,\n          \"sourceobj\": [\"categoryname\"]\n        }\n      };\n\n      this.spinnerLoader = true;\n      this.apiservice.addData(data).subscribe(response => {\n        this.spinnerLoader = false;\n        this.ResetForm();\n        setTimeout(() => {\n          this.router.navigateByUrl('/' + this.listrouteData);\n        }, 100);\n      })\n    } else {\n      alert(\"error occured\");\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    //MatFileUploadModule\n  ]\n})\nexport class MaterialModule { }\n\n\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../../Service/api.service';\n@Component({\n  selector: 'lib-addedit-team',\n  templateUrl: './addedit-team.component.html',\n  styleUrls: ['./addedit-team.component.css']\n})\nexport class AddeditTeamComponent implements OnInit {\n  public CategoryManagementTeamForm: FormGroup;\n  public DataListViaResolve: any = [];\n  public allData:any=[];\n  public SingledataEdit: any = [];\n  public getDataEndpointData: any;\n  public addEndpointData: any;\n  public serverUrlData: any;\n  public spinnerLoader: boolean;\n  public listingPageUrl: any = '';\n  public params_id:any;\n  public ButtonText:any=\"Submit\";\n  @Input()          //getting all data list via resolve call from app\n  set TeamData(val: any) {\n    this.DataListViaResolve = (val) || '<no name set>';\n    this.DataListViaResolve = val;\n    console.log(\"in ts \",this.DataListViaResolve);\n  }\n  @Input()          //setting the server url from project\n  set serverUrl(serverUrlval: any) {\n    this.serverUrlData = (serverUrlval) || '<no name set>';\n    this.serverUrlData = serverUrlval;\n  }\n  @Input()          //setting the server url from project\n  set getDataEndpoint(endpointUrlval: any) {\n    this.getDataEndpointData = (endpointUrlval) || '<no name set>';\n    this.getDataEndpointData = endpointUrlval;\n    console.log(\"data\",this.getDataEndpointData);\n\n  }\n  @Input()\n  set singleEditData(val:any){\n    this.SingledataEdit = (val) || '<no name set>';\n    this.SingledataEdit = val;\n    if(this.activeroute.snapshot.params._id){\n      this.ButtonText=\"Update\";\n    this.params_id=this.activeroute.snapshot.params._id;\n    this.CategoryManagementTeamForm.controls['categoryName'].patchValue(val[0].categoryName);\n    this.CategoryManagementTeamForm.controls['description'].patchValue(val[0].description);\n    this.CategoryManagementTeamForm.controls['status'].patchValue(val[0].status);\n    \n    //this.CategoryManagementTeamForm.controls['role'].patchValue(val[0].role);\n    // for (const i in this.SingledataEdit[0].role) {\n      \n    //     this.CategoryManagementTeamForm.controls['role'].patchValue(this.SingledataEdit[i].role)\n    // }\n    }\n  }\n  @Input()          //setting the server url from project\n  set addEndpoint(endpointUrlval: any) {\n    this.addEndpointData = (endpointUrlval) || '<no name set>';\n    this.addEndpointData = endpointUrlval;\n  }\n  @Input()          //setting the url of listing page from app\n  set ListPageRoute(Url: any) {\n    this.listingPageUrl = (Url) || '<no name set>';\n    this.listingPageUrl = Url;\n   \n  }\n\n  constructor(public fb: FormBuilder, public activeroute: ActivatedRoute,\n    public _http: HttpClient, public router: Router, public apiService: ApiService) {\n\n    this.CategoryManagementTeamForm = this.fb.group({\n      categoryName: ['', Validators.required],\n      description: ['', Validators.required],\n      status: [true,],\n      role: ['']\n    })\n  }\n\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlData);\n    }, 50);\n    this.apiService.clearaddEndpoint();\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointData);\n    }, 50);\n    this.apiService.cleargetdataEndpoint();\n    setTimeout(() => {\n      this.apiService.setgetdataEndpoint(this.getDataEndpointData);\n    }, 50);\n    setTimeout(() => {\n      this.getData();\n    }, 50);\n  }\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n  CategoryManagementTeamFormSubmit() {\n    if (this.CategoryManagementTeamForm.valid) {\n      let x: any;\n      for (x in this.CategoryManagementTeamForm.controls) {\n        this.CategoryManagementTeamForm.controls[x].markAsTouched();\n      }\n      if (this.CategoryManagementTeamForm.valid) {\n        if (this.CategoryManagementTeamForm.value.status)\n          this.CategoryManagementTeamForm.value.status = parseInt(\"1\");\n        else\n          this.CategoryManagementTeamForm.value.status = parseInt(\"0\");\n      }\n      var data: any;\n      if (this.activeroute.snapshot.params._id) {\n        \n        data = {\n          \"source\": \"Team_category\",\n          \"data\": {\n            \"id\": this.params_id,\n            'categoryName': this.CategoryManagementTeamForm.value.categoryName,\n            'description': this.CategoryManagementTeamForm.value.description,\n            'status': this.CategoryManagementTeamForm.value.status,\n            'role': this.CategoryManagementTeamForm.value.role\n           \n          }\n        }\n\n      }else{\n        data = {\n          \"source\": \"Team_category\",\n          \"data\": this.CategoryManagementTeamForm.value\n        }\n      }\n     \n      this.spinnerLoader = true;\n      this.apiService.addData(data).subscribe(response => {\n        this.spinnerLoader = false;\n        setTimeout(() => {\n          this.router.navigateByUrl('/' + this.listingPageUrl);\n        }, 100);\n      })\n    }\n  }\n  getData(){\n    let data: any = {\n      \"source\": \"rolemanagement\"\n      }\n      this.apiService.getData(data).subscribe(response => {\n      let result: any = response;\n      this.allData = result.res;\n      \n      })\n  }\n  ResetTeamForm() {\n    this.CategoryManagementTeamForm.reset();\n  }\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'lib-list-team',\n  templateUrl: './list-team.component.html',\n  styleUrls: ['./list-team.component.css']\n})\nexport class ListTeamComponent implements OnInit {\n  public alldata: any = [];\n  public addPageVal: any = '';\n  public searchingendpoint: any = '';\n  public sourcenameViaapp: any = '';\n  public tokenVal: any = '';\n  public deleteendpointVal: any = '';\n  public addupdate: any = '';\n  public serverUrlData: any = '';\n  public editRouteval: any = '';\n  public manageRoute: any;\n  public alldata_skip: any = [\"_id\", \"created_at\"];\n  public alldata_modify_header: any = {\n    \"categoryName\": \"Category Name\", \"description\": \"Description\",\n    \"rolename\": \"Role Name\", \"status\": \"Status\",\"role\" : \"Role\"\n  };\n  public status: any = [{ val: 1, 'name': 'Active' }, { val: 0, 'name': 'Inactive' }];\n  public search_settings: any =\n    {\n      selectsearch: [{ label: 'Search By Status', field: 'status', values: this.status }],\n      textsearch: [{ label: \"Search By Category Name\", field: 'categoryName' }],\n\n    };\n\n  @Input()          //getting all data list via resolve call from app\n  set TeamData(val: any) {\n    this.alldata = (val) || '<no name set>';\n    this.alldata = val;\n  }\n  @Input()          //getting edit page route from app\n  set EditRoute(val: any) {\n    this.editRouteval = (val) || '<no name set>';\n    this.editRouteval = val;\n    console.log(this.editRouteval);\n  }\n  @Input()\n  set addButtonRoute(val: any) {\n    this.addPageVal = (val) || '<no name set>';\n    this.addPageVal = val;\n  }\n  @Input()        //manage team button route\n  set manageButtonRoute(val: any) {\n    this.manageRoute = (val) || '<no name set>';\n    this.manageRoute = (val);\n  }\n  @Input()\n  set UpdateRoute(val: any) {\n    this.addupdate = (val) || '<no name set>';\n    this.addupdate = val;\n    console.log(this.addupdate);\n  }\n  @Input()\n  set Token(val: any) {\n    this.tokenVal = (val) || '<no name set>';\n    this.tokenVal = val;\n    console.log(this.tokenVal);\n  }\n  @Input()\n  set SourceName(val: any) {\n    this.sourcenameViaapp = (val) || '<no name set>';\n    this.sourcenameViaapp = val;\n    console.log(this.sourcenameViaapp);\n  }\n  @Input()\n  set SearchEndpoint(val: any) {\n    this.searchingendpoint = (val) || '<no name set>';\n    this.searchingendpoint = val;\n    console.log(this.searchingendpoint);\n  }\n  @Input()\n  set DeleteEndpoint(val: any) {\n    this.deleteendpointVal = (val) || '<no name set>';\n    this.deleteendpointVal = val;\n    console.log(this.deleteendpointVal);\n  }\n  @Input()          //setting the server url from project\n  set serverUrl(serverUrlval: any) {\n    this.serverUrlData = (serverUrlval) || '<no name set>';\n    this.serverUrlData = serverUrlval;\n    console.log(this.serverUrlData);\n  }\n  constructor(public router: Router) { }\n\n  ngOnInit() {\n  }\n  addButton() {\n    this.router.navigateByUrl('/' + this.addPageVal);\n  }\n  manageTeamButton() {\n    this.router.navigateByUrl('/' + this.manageRoute);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'lib-team-list',\n  templateUrl: './team-list.component.html',\n  styleUrls: ['./team-list.component.css']\n})\nexport class TeamListComponent implements OnInit {\n  public DataList: any = [];\n  public serverUrlData: any = '';\n  public tokenVal:any='';\n  public DelEndpoint:any='';\n  public editroute :any='';\n  public updatendpoint:any='';\n  public collectionName:any='';\n  public searchingSource:any='';\n  public searchingEndpoint:any='';\n  public addPageRoute:any='';\n\n \n  @Input()    //getting all data via resolve call from app\n  set allData(val: any) {\n    this.DataList = (val) || '<no name set>';\n    this.DataList = val;\n  }\n  public data_skip: any = [\"_id\",\"multipleemail\",\"bulletarray\"];\n  public data_modify_header: any = { \"membername\" : \"Member Name\",\"description\":\"Description\",\n  \"categoryName\":\"Category Name\",\"multiplephone\":\"Phone Numbers\",\"images\":\"Images\"\n };\n public search_settings: any =\n    {\n      textsearch: [{ label: \"Search By Category Name\", field: 'categoryname' },\n      { label: \"Search By Member Name\" , field:'membername'},\n      { label: \"Search By E-Mail\" , field:'multipleemail'}],\n      // selectsearch:[{label:'Search By email',field:''}],\n      // search:[{label:\"Search By E-Mails\",field:'multipleemail'}]\n    };\n   pendingmodelapplicationarray_detail_datatype:any=[{\n      key: \"images\",\n      value: 'image',\n      fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/team/'    // Image path \n    }];\n  @Input()          //setting the server url from project\n  set serverUrl(serverUrlval: any) {\n    this.serverUrlData = (serverUrlval) || '<no name set>';\n    this.serverUrlData = serverUrlval;\n  }\n  @Input()         //getting token from application\n  set Token(val:any){\n    this.tokenVal = (val) || '<no name set>';\n    this.tokenVal = val;\n\n  }\n  @Input()       //getting delete endpoint from application\n  set DeleteEndpoint(val:any){\n    this.DelEndpoint = (val) || '<no name set>';\n    this.DelEndpoint = val;\n  }\n  @Input()      //getting edit route from application\n  set EditRoute(val:any){\n    this.editroute = (val) || '<no name set>';\n    this.editroute = val;\n  }\n  @Input()      //getting the update endpoint from application\n  set UpdateEndpoint(val:any){\n    this.updatendpoint = (val) || '<no name set>';\n    this.updatendpoint = val;\n  }\n  @Input()      //getting the source name from application\n  set SourceName(val:any){\n    this.collectionName = (val) || '<no name set>';\n    this.collectionName = val;\n  } \n  @Input()      //getting the searching endpoint from the application\n  set SearchSourceName(val:any){\n    this.searchingSource = (val) || '<no name set>';\n    this.searchingSource = val;\n  }\n  @Input()     //getting the search endpoint from endpoint\n  set SearchEndpoint(val:any){\n    this.searchingEndpoint = (val) || '<no name set>';\n    this.searchingEndpoint = val;\n  }\n  @Input()   //getting the add page route from application\n  set AddPageRoute(val:any){\n    this.addPageRoute = (val) || '<no name set>';\n    this.addPageRoute = val;\n  }\n \n  constructor(public router : Router) { }\n\n  ngOnInit() {\n    console.log('this.preview_detail_listing')\n    console.log(this.pendingmodelapplicationarray_detail_datatype)\n  }\n  addButton(){\n    this.router.navigateByUrl('/' + this.addPageRoute);\n  }\n\n}\n","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { TeamComponent } from './team.component';\nimport { AddEditTeamComponent } from './Component/add-edit-team/add-edit-team.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MaterialModule } from './material.module';\nimport { ListingModule } from 'lib-listing';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AddeditTeamComponent } from './Category-Management/addedit-team/addedit-team.component';\nimport { ListTeamComponent } from './Category-Management/list-team/list-team.component';\nimport { ApiService } from '../lib/Service/api.service';\nimport { TeamListComponent } from './Component/team-list/team-list.component';\nimport { FileUploadModule } from 'file-upload';\n\n@NgModule({\n  declarations: [TeamComponent, AddEditTeamComponent, AddeditTeamComponent, ListTeamComponent, TeamListComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    ListingModule,\n    FileUploadModule\n  ],\n  providers: [ApiService],\n  exports: [TeamComponent,AddEditTeamComponent,AddeditTeamComponent,ListTeamComponent,TeamListComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class TeamModule { }\n"]}
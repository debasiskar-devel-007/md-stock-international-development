!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@angular/router"),require("rxjs/operators"),require("@angular/common/http"),require("rxjs"),require("ngx-cookie-service"),require("@angular/platform-browser"),require("@angular/common"),require("@angular/cdk/a11y"),require("@angular/cdk/drag-drop"),require("@angular/cdk/portal"),require("@angular/cdk/scrolling"),require("@angular/cdk/stepper"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/material/autocomplete"),require("@angular/material/badge"),require("@angular/material/bottom-sheet"),require("@angular/material/button"),require("@angular/material/button-toggle"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/chips"),require("@angular/material/stepper"),require("@angular/material/datepicker"),require("@angular/material/dialog"),require("@angular/material/divider"),require("@angular/material/expansion"),require("@angular/material/grid-list"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/core"),require("@angular/material/paginator"),require("@angular/material/progress-bar"),require("@angular/material/progress-spinner"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/sidenav"),require("@angular/material/slider"),require("@angular/material/slide-toggle"),require("@angular/material/snack-bar"),require("@angular/material/sort"),require("@angular/material/table"),require("@angular/material/tabs"),require("@angular/material/toolbar"),require("@angular/material/tooltip"),require("@angular/material/tree"),require("lib-listing"),require("@angular/platform-browser/animations"),require("file-upload")):"function"==typeof define&&define.amd?define("team",["exports","@angular/core","@angular/forms","@angular/router","rxjs/operators","@angular/common/http","rxjs","ngx-cookie-service","@angular/platform-browser","@angular/common","@angular/cdk/a11y","@angular/cdk/drag-drop","@angular/cdk/portal","@angular/cdk/scrolling","@angular/cdk/stepper","@angular/cdk/table","@angular/cdk/tree","@angular/material/autocomplete","@angular/material/badge","@angular/material/bottom-sheet","@angular/material/button","@angular/material/button-toggle","@angular/material/card","@angular/material/checkbox","@angular/material/chips","@angular/material/stepper","@angular/material/datepicker","@angular/material/dialog","@angular/material/divider","@angular/material/expansion","@angular/material/grid-list","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/menu","@angular/material/core","@angular/material/paginator","@angular/material/progress-bar","@angular/material/progress-spinner","@angular/material/radio","@angular/material/select","@angular/material/sidenav","@angular/material/slider","@angular/material/slide-toggle","@angular/material/snack-bar","@angular/material/sort","@angular/material/table","@angular/material/tabs","@angular/material/toolbar","@angular/material/tooltip","@angular/material/tree","lib-listing","@angular/platform-browser/animations","file-upload"],e):e((t=t||self).team={},t.ng.core,t.ng.forms,t.ng.router,t.rxjs.operators,t.ng.common.http,t.rxjs,t.ngxCookieService,t.ng.platformBrowser,t.ng.common,t.ng.cdk.a11y,t.ng.cdk["drag-drop"],t.ng.cdk.portal,t.ng.cdk.scrolling,t.ng.cdk.stepper,t.ng.cdk.table,t.ng.cdk.tree,t.ng.material.autocomplete,t.ng.material.badge,t.ng.material["bottom-sheet"],t.ng.material.button,t.ng.material["button-toggle"],t.ng.material.card,t.ng.material.checkbox,t.ng.material.chips,t.ng.material.stepper,t.ng.material.datepicker,t.ng.material.dialog,t.ng.material.divider,t.ng.material.expansion,t.ng.material["grid-list"],t.ng.material.icon,t.ng.material.input,t.ng.material.list,t.ng.material.menu,t.ng.material.core,t.ng.material.paginator,t.ng.material["progress-bar"],t.ng.material["progress-spinner"],t.ng.material.radio,t.ng.material.select,t.ng.material.sidenav,t.ng.material.slider,t.ng.material["slide-toggle"],t.ng.material["snack-bar"],t.ng.material.sort,t.ng.material.table,t.ng.material.tabs,t.ng.material.toolbar,t.ng.material.tooltip,t.ng.material.tree,t.libListing,t.ng.platformBrowser.animations,t.fileUpload)}(this,function(t,e,a,n,r,o,i,l,s,p,m,d,u,c,g,h,f,b,y,x,v,k,D,M,E,S,_,F,U,T,j,C,w,I,P,q,N,R,B,O,L,V,H,A,z,G,J,W,K,Q,X,Y,Z,$){"use strict";var tt=function(){function t(){}return t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}(),et=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"lib-Team",template:"",styles:[".example-card{max-width:400px}.example-header-image{background-image:url(https://material.angular.io/assets/img/examples/shiba1.jpg);background-size:cover;border:2px solid #e0dada}.headerSpan{text-align:center;display:block;margin:auto}.darkToolbar{background-color:#000}.gridListWrapper{padding:30px}.buttonsetToolbar{background-color:#f4f3f8;text-align:center;display:block;padding-top:10px}.singleButton{margin:5px;float:right}.example-form{min-width:150px;max-width:auto;width:100%}.example-full-width{width:100%}td{padding-right:8px}.mat-card{background:#fff!important}.mat-dialog-content{border-radius:0;overflow:hidden!important;padding:0 24px!important;box-shadow:none!important}.mat-dialog-content .mat-dialog-title{background-color:#4f4f4f;border:0;padding:.35em;color:#fff}.mat-dialog-content .mat-card{transition:none!important;display:flex!important;position:relative;padding:5px;border-radius:0;align-items:center}.mat-dialog-content .mat-card .mat-card-content,.mat-dialog-content .mat-card .mat-card-header{white-space:normal;word-break:break-word}.mat-dialog-content .mat-card-header .mat-card-title{margin-bottom:0;font-size:16px}.mat-dialog-content .mat-dialog-actions{margin-bottom:0;justify-content:center}.mat-dialog-content .mat-dialog-actions button{display:inline-block;height:auto;background:#c33;font-size:18px;color:#fff!important;text-transform:uppercase;font-family:Ralewaybold;text-decoration:none!important;line-height:normal;text-align:center;margin:10px auto 0;white-space:normal;padding:12px 10px;border-radius:0!important}.cdk-global-overlay-wrapper{align-items:center!important}.cdk-global-overlay-wrapper .mat-bottom-sheet-container bottom-sheet .mat-nav-list{display:flex;padding-top:0!important}.mat-bottom-sheet-container bottom-sheet .mat-nav-list .mat-list-item{display:inline-block;height:auto;background:#c33;font-size:18px;color:#fff!important;text-transform:uppercase;font-family:Ralewaybold;text-decoration:none!important;line-height:normal;text-align:center;margin:5px;white-space:normal;padding:12px 10px;border-radius:0!important}.mat-bottom-sheet-container bottom-sheet .mat-nav-list{text-align:center}.mat-dialog-container .mat-dialog-actions button{display:inline-block;height:auto;background:#c33;font-size:18px;color:#fff!important;text-transform:uppercase;font-family:Ralewaybold;text-decoration:none!important;line-height:normal;text-align:center;margin:10px auto 0;white-space:normal;padding:12px 10px;border-radius:0!important}.mat-dialog-container .mat-card-header .mat-card-title{margin-bottom:0;font-size:16px;font-weight:600}.mat-form-field{margin:0 10px}"]}]}],t.ctorParameters=function(){return[]},t}(),at=function(){function t(t,e,a){var n=this;this._http=t,this._authHttp=e,this.cookieService=a,this.progress=[],this.uploaderror="",this.accesstoken=this.cookieService.get("jwtToken"),this.fileservername=[],this.subjectForServerUrl=new i.Subject,this.subjectForaddEndpointUrl=new i.Subject,this.subjectForuploadEndpointUrl=new i.Subject,this.subjectForupdateEndpointUrl=new i.Subject,this.subjectFordeletesingleEndpointUrl=new i.Subject,this.subjectForupdatestatusSingleEndpointUrl=new i.Subject,this.subjectForGetdataEndpointUrl=new i.Subject,this.subscriptionServer=this.getServerUrl().subscribe(function(t){var e;e=t,n.serverUrl=null!=e?e:null}),this.subscriptionaddEndpoint=this.getaddEndpoint().subscribe(function(t){var e;e=t,n.addendpointUrl=null!=e?e:null}),this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(function(t){var e;e=t,n.uploadEndpointUrl=null!=e?e:null}),this.subscriptionupdateEndpoint=this.getupdateEndpoint().subscribe(function(t){var e;e=t,n.updateendpointUrl=null!=e?e:null}),this.subscriptiondeletesingleEndpoint=this.getdeletesingleEndpoint().subscribe(function(t){var e;e=t,n.deletesingle_endpointUrl=null!=e?e:null}),this.subscriptionupdatestatusSingleEndpoint=this.getupdatestatus_singleEndpoint().subscribe(function(t){var e;e=t,n.updatestatus_single_endpointUrl=null!=e?e:null}),this.subscriptionGetdataEndpoint=this.getdataEndpoint().subscribe(function(t){var e;e=t,n.getdata_endpointUrl=null!=e?e:null})}return t.prototype.setServerUrl=function(t){this.subjectForServerUrl.next(t)},t.prototype.clearServerUrl=function(){this.subjectForServerUrl.next(null)},t.prototype.getServerUrl=function(){return this.subjectForServerUrl.asObservable()},t.prototype.setaddEndpoint=function(t){this.subjectForaddEndpointUrl.next(t)},t.prototype.clearaddEndpoint=function(){this.subjectForaddEndpointUrl.next(null)},t.prototype.getaddEndpoint=function(){return this.subjectForaddEndpointUrl.asObservable()},t.prototype.setuploadEndpont=function(t){this.subjectForuploadEndpointUrl.next(t)},t.prototype.clearuploadEndpoint=function(){this.subjectForuploadEndpointUrl.next(null)},t.prototype.getuploadEndpoint=function(){return this.subjectForuploadEndpointUrl.asObservable()},t.prototype.setupdateEndpoint=function(t){this.subjectForupdateEndpointUrl.next(t)},t.prototype.clearupdateEndpoint=function(){this.subjectForupdateEndpointUrl.next(null)},t.prototype.getupdateEndpoint=function(){return this.subjectForupdateEndpointUrl.asObservable()},t.prototype.setdeletesingleEndpoint=function(t){this.subjectFordeletesingleEndpointUrl.next(t)},t.prototype.cleardeletesingleEndpoint=function(){this.subjectFordeletesingleEndpointUrl.next(null)},t.prototype.getdeletesingleEndpoint=function(){return this.subjectFordeletesingleEndpointUrl.asObservable()},t.prototype.setupdatestatus_singleEndpoint=function(t){this.subjectForupdatestatusSingleEndpointUrl.next(t)},t.prototype.clearupdatestatus_singleEndpoint=function(){this.subjectForupdatestatusSingleEndpointUrl.next(null)},t.prototype.getupdatestatus_singleEndpoint=function(){return this.subjectForupdatestatusSingleEndpointUrl.asObservable()},t.prototype.setgetdataEndpoint=function(t){this.subjectForGetdataEndpointUrl.next(t)},t.prototype.cleargetdataEndpoint=function(){this.subjectForGetdataEndpointUrl.next(null)},t.prototype.getdataEndpoint=function(){return this.subjectForGetdataEndpointUrl.asObservable()},t.prototype.isTokenExpired=function(){},t.prototype.addData=function(t){console.log("in adddata apiservice");var e={headers:new o.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return console.log("httpoptions",e,this.serverUrl,t),this._http.post(this.serverUrl+this.addendpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},t.prototype.uploadFile=function(t){var e={headers:new o.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.uploadEndpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},t.prototype.UpdateData=function(t){var e={headers:new o.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.updateendpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},t.prototype.getData=function(t){var e={headers:new o.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.getdata_endpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},t.prototype.deleteSingleData=function(t){var e={headers:new o.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.deletesingle_endpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},t.prototype.deleteMultipleData=function(t){var e={headers:new o.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.deletesingle_endpointUrl+"many",JSON.stringify(t),e).pipe(r.map(function(t){return t}))},t.prototype.UpdateStatusForSingleData=function(t){var e={headers:new o.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.updatestatus_single_endpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},t.prototype.UpdateStatusForMultipleData=function(t){var e={headers:new o.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.updatestatus_single_endpointUrl+"many",JSON.stringify(t),e).pipe(r.map(function(t){return t}))},t.prototype.CustomRequest=function(t,e){var a={headers:new o.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(r.map(function(t){return t}))},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:o.HttpClient},{type:o.HttpClient},{type:l.CookieService}]},t.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new t(e.ɵɵinject(o.HttpClient),e.ɵɵinject(o.HttpClient),e.ɵɵinject(l.CookieService))},token:t,providedIn:"root"}),t}();var nt=function(){function t(t){this.httpClient=t,this.SERVER_URL="http://166.62.39.137:5009/uploads",this.response={}}return t.prototype.upload=function(t,e){var a=this;return this.httpClient.post(this.SERVER_URL,t,{reportProgress:!0,observe:"events"}).pipe(r.map(function(t){switch(t.type){case o.HttpEventType.UploadProgress:var e=Math.round(100*t.loaded/t.total);return a.response={status:"process",data:{total:100,loaded:e}},a.response;case o.HttpEventType.Response:return t.body;default:return"Unhandled event: "+t.type}}))},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:o.HttpClient}]},t.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new t(e.ɵɵinject(o.HttpClient))},token:t,providedIn:"root"}),t}();var rt=function(){function t(t,e,n,r,o,i){this.fb=t,this.activeroute=e,this._http=n,this.uploadService=r,this.apiservice=o,this.router=i,this.teamData=[],this.allData=[],this.listrouteData="",this.editarray=[],this.imageConfigData="",this.SingleDataList=[],this.ButtonText="Submit",this.HeaderText="Add Team Member",this.flag=!1,this.img_var="",this.teamForm=this.fb.group({categoryname:["",a.Validators.required],membername:["",a.Validators.required],description:["",a.Validators.required],multiplephone:this.fb.array([]),multipleemail:this.fb.array([]),bulletarray:this.fb.array([]),team_img:[""]})}return Object.defineProperty(t.prototype,"imageUpload",{set:function(t){this.imageConfigData=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"singleData",{set:function(t){if(this.SingleDataList=t||"<no name set>",this.SingleDataList=t,this.activeroute.snapshot.params._id){for(var e in this.ButtonText="Update",this.HeaderText="Edit Team Member",this.flag=!0,this.params_id=this.activeroute.snapshot.params._id,this.teamForm.controls.categoryname.patchValue(t[0].categoryname),this.teamForm.controls.description.patchValue(t[0].description),this.teamForm.controls.membername.patchValue(t[0].membername),this.teamForm.controls.team_img.patchValue(t[0].team_img),this.img_var=this.SingleDataList[0].team_img.basepath+this.SingleDataList[0].team_img.image,this.image_name=this.SingleDataList[0].team_img.name,this.image_type=this.SingleDataList[0].team_img.type,this.SingleDataList[0].bulletarray)this.addBulletListData(this.SingleDataList[0].bulletarray[e].bullet_name,this.SingleDataList[0].bulletarray[e].bullet_desc);for(var e in this.SingleDataList[0].multiplephone)this.addphone(this.SingleDataList[0].multiplephone[e].contactphone);for(var e in this.SingleDataList[0].multipleemail)this.addemail(this.SingleDataList[0].multipleemail[e].contactemail)}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"serverUrl",{set:function(t){this.serverUrlData=t||"<no name set>",this.serverUrlData=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ListRoute",{set:function(t){this.listrouteData=t||"<no name set>",this.listrouteData=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"getDataEndpoint",{set:function(t){this.getDataEndpointData=t||"<no name set>",this.getDataEndpointData=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"addEndpoint",{set:function(t){this.addEndpointData=t||"<no name set>",this.addEndpointData=t},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;this.apiservice.clearServerUrl(),setTimeout(function(){t.apiservice.setServerUrl(t.serverUrlData)},50),this.apiservice.cleargetdataEndpoint(),setTimeout(function(){t.apiservice.setgetdataEndpoint(t.getDataEndpointData)},50),this.apiservice.clearaddEndpoint(),setTimeout(function(){t.apiservice.setaddEndpoint(t.addEndpointData)},50),setTimeout(function(){t.getData()},50),null==this.activeroute.snapshot.params._id&&(this.addBulletListData("",""),this.addphone(""),this.addemail(""))},t.prototype.inputUntouch=function(t,e){t.controls[e].markAsUntouched()},t.prototype.addphone=function(t){this.teamForm.controls.multiplephone.push(this.fb.group({contactphone:[t]}))},t.prototype.removephone=function(t){this.teamForm.controls.multiplephone.removeAt(t)},t.prototype.addemail=function(t){this.teamForm.controls.multipleemail.push(this.fb.group({contactemail:[t]}))},t.prototype.removeemail=function(t){this.teamForm.controls.multipleemail.removeAt(t)},t.prototype.getData=function(){var t=this;this.apiservice.getData({source:"Team_category"}).subscribe(function(e){var a=e;t.allData=a.res})},t.prototype.ResetForm=function(){this.teamForm.reset()},t.prototype.addBulletListData=function(t,e){this.teamForm.controls.bulletarray.push(this.fb.group({bullet_name:[t],bullet_desc:[e]}))},t.prototype.deleteBulletListData=function(){this.teamForm.controls.bulletarray.removeAt(1)},t.prototype.trackByFn=function(t){return t},t.prototype.clear_image=function(){this.flag=!1},t.prototype.TeamFormSubmit=function(){var t,e,a=this;if(this.imageConfigData.files){if(this.imageConfigData.files.length>1)return void(this.ErrCode=!0);this.teamForm.value.team_img={basepath:this.imageConfigData.files[0].upload.data.basepath+"/"+this.imageConfigData.path+"/",image:this.imageConfigData.files[0].upload.data.data.fileservername,name:this.imageConfigData.files[0].name,type:this.imageConfigData.files[0].type}}else this.teamForm.value.team_img=!1;for(t in this.teamForm.controls)this.teamForm.controls[t].markAsTouched();this.teamForm.valid?(e=this.activeroute.snapshot.params._id?{source:"Team_management",data:{id:this.params_id,categoryname:this.teamForm.value.categoryname,membername:this.teamForm.value.membername,description:this.teamForm.value.description,multiplephone:this.teamForm.value.multiplephone,multipleemail:this.teamForm.value.multipleemail,bulletarray:this.teamForm.value.bulletarray,team_img:this.teamForm.value.team_img},sourceobj:["categoryname"]}:{source:"Team_management",data:this.teamForm.value,sourceobj:["categoryname"]},this.spinnerLoader=!0,this.apiservice.addData(e).subscribe(function(t){a.spinnerLoader=!1,a.ResetForm(),setTimeout(function(){a.router.navigateByUrl("/"+a.listrouteData)},100)})):alert("error occured")},t.decorators=[{type:e.Component,args:[{selector:"lib-add-edit-team",template:'<span class="formspan">\n  <mat-card>\n    <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n      <h2 class="headerSpan">{{HeaderText}}</h2>\n    </mat-toolbar>\n    <span class="formspan">\n      <mat-card-content class="example-container">\n        <form class="example-form" novalidate [formGroup]="teamForm" name="teamForm" (ngSubmit)="TeamFormSubmit()"\n          autocomplete="off">\n          <div class="example-container">\n\n            <mat-form-field>\n              <input matInput placeholder="Team Member Name" [formControl]="teamForm.controls[\'membername\']"\n                (blur)="inputUntouch(teamForm,\'membername\')">\n              <mat-error *ngIf="teamForm.controls[\'membername\'].touched \n                && !teamForm.controls[\'membername\'].valid\n                       && teamForm.controls[\'membername\'].errors.required">\n                Category Name field can not be blank</mat-error>\n            </mat-form-field><br>\n\n\n\n            <mat-form-field>\n              <textarea matInput placeholder="Description" [formControl]="teamForm.controls[\'description\']"\n                (blur)="inputUntouch(teamForm,\'description\')">\n                       </textarea>\n              <mat-error *ngIf="teamForm.controls[\'description\'].touched && !teamForm.controls[\'description\'].valid\n                   && teamForm.controls[\'description\'].errors.required">\n                Description field can not be blank</mat-error>\n            </mat-form-field>\n\n\n            <mat-form-field>\n              <mat-label>Category Name</mat-label>\n              <mat-select formControlName="categoryname">\n                <mat-option [value]=0>\n                  Select a category\n                </mat-option>\n                <mat-option *ngFor="let f of allData" [value]="f._id">\n                  {{f.categoryName}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            \x3c!-- bullet list start here --\x3e\n            <div formArrayName="bulletarray" class="bulletarr"\n              *ngFor="let blist of teamForm.controls.bulletarray?.value; let i = index; trackBy: trackByFn">\n              <ng-container [formGroupName]="i">\n                <div class="top_header">\n                  bullet list\n                </div>\n                \x3c!-- ------------bullet name-----------  --\x3e\n                <mat-form-field>\n                  <input matInput formControlName="bullet_name" placeholder="Name">\n\n                </mat-form-field><br>\n                \x3c!-- -----------------------------------  --\x3e\n\n\n                \x3c!-- --------------------bullet description-----------------  --\x3e\n                <mat-form-field>\n                  <textarea matInput formControlName="bullet_desc" placeholder="Description"></textarea>\n\n                </mat-form-field><br>\n                \x3c!-- ----------------------------------------------------------  --\x3e\n\n              </ng-container>\n              <button type="button" (click)="addBulletListData(\'\',\'\')">\n                <mat-icon>add</mat-icon>\n              </button>\n              <button type="button" (click)="deleteBulletListData()" *ngIf="i!=0">\n                <mat-icon>remove</mat-icon>\n              </button>\n            </div>\n            \x3c!-- bullet list end here --\x3e\n\n\n            \x3c!--multiple phone start here --\x3e\n            <div formArrayName="multiplephone"\n              *ngFor="let plist of teamForm.controls.multiplephone?.value; let i = index; trackBy: trackByFn">\n              <ng-container [formGroupName]="i">\n\n                <mat-form-field>\n                  <input matInput formControlName="contactphone" placeholder="contactphone">\n                  <span matSuffix>\n                    <i class="material-icons" (click)="addphone(\'\')">add</i>\n                    <i *ngIf="i>0" class="material-icons" (click)="removephone(i)">remove</i>\n                  </span>\n                </mat-form-field><br>\n\n              </ng-container>\n            </div>\n            \x3c!-- multiple phone end here --\x3e\n\n            \x3c!-- multiple e-mail start here --\x3e\n            <div formArrayName="multipleemail"\n              *ngFor="let elist of teamForm.controls.multipleemail?.value; let i = index; trackBy: trackByFn">\n              <ng-container [formGroupName]="i">\n\n                <mat-form-field>\n                  <input matInput formControlName="contactemail" placeholder="contactemail">\n                  <span matSuffix>\n                    <i class="material-icons" (click)="addemail(\'\')">add</i>\n                    <i *ngIf="i>0" class="material-icons" (click)="removeemail(i)">remove</i>\n                  </span>\n                </mat-form-field><br>\n\n              </ng-container>\n            </div>\n            \x3c!-- multiple e-mail end here --\x3e\n\n          </div>\n          \x3c!-- file upload library start here --\x3e\n          <lib-file-upload [config]="imageConfigData"></lib-file-upload>\n          <mat-error *ngIf="ErrCode==true">Please add just one image.</mat-error>\n\n          \x3c!-- CARD VIEW  --\x3e\n          <mat-card-content class="files-view" *ngIf="flag==true">\n            <mat-card class="example-card">\n              <img mat-card-image [attr.src]="img_var">\n              <mat-card-title>{{ image_name }}</mat-card-title>\n              <mat-card-subtitle>{{ image_type }}</mat-card-subtitle>\n              <span class="closecard" (click)="clear_image()">\n                <i class="material-icons">clear</i>\n              </span>\n            </mat-card>\n          </mat-card-content>\n          \x3c!-- file upload end here --\x3e\n          <button mat-raised-button color="primary" mat-button class="submitbtn" type="submit">{{ButtonText}}</button>\n          <button type="button" class="submitbtn" mat-raised-button color="primary" (click)="ResetForm()">Reset</button>\n        </form>\n      </mat-card-content>\n    </span>\n    <mat-spinner *ngIf="spinnerLoader"></mat-spinner>\n  </mat-card>\n',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:block;position:relative;text-align:left;width:100%;background:#fff;padding:1px 14px;box-sizing:border-box;margin:0}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}:host ::ng-deep .ck-editor__editable_inline{min-height:50px}.bulletarr{margin-top:20px;border:2px solid #3f50b4;box-sizing:border-box;margin-bottom:15px;padding:10px}.top_header{background:#3f50b4;padding:16px;color:#fff;font-weight:700;text-transform:capitalize;margin-bottom:20px}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.closecard i{font-size:18px;line-height:27px}"]}]}],t.ctorParameters=function(){return[{type:a.FormBuilder},{type:n.ActivatedRoute},{type:o.HttpClient},{type:nt},{type:at},{type:n.Router}]},t.propDecorators={imageUpload:[{type:e.Input}],singleData:[{type:e.Input}],serverUrl:[{type:e.Input}],ListRoute:[{type:e.Input}],getDataEndpoint:[{type:e.Input}],addEndpoint:[{type:e.Input}]},t}();var ot=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{declarations:[],imports:[p.CommonModule],exports:[m.A11yModule,g.CdkStepperModule,h.CdkTableModule,f.CdkTreeModule,d.DragDropModule,b.MatAutocompleteModule,y.MatBadgeModule,x.MatBottomSheetModule,v.MatButtonModule,k.MatButtonToggleModule,D.MatCardModule,M.MatCheckboxModule,E.MatChipsModule,S.MatStepperModule,_.MatDatepickerModule,F.MatDialogModule,U.MatDividerModule,T.MatExpansionModule,j.MatGridListModule,C.MatIconModule,w.MatInputModule,I.MatListModule,P.MatMenuModule,q.MatNativeDateModule,N.MatPaginatorModule,R.MatProgressBarModule,B.MatProgressSpinnerModule,O.MatRadioModule,q.MatRippleModule,L.MatSelectModule,V.MatSidenavModule,H.MatSliderModule,A.MatSlideToggleModule,z.MatSnackBarModule,G.MatSortModule,J.MatTableModule,W.MatTabsModule,K.MatToolbarModule,Q.MatTooltipModule,X.MatTreeModule,u.PortalModule,c.ScrollingModule]}]}],t}(),it=function(){function t(t,e,n,r,o){this.fb=t,this.activeroute=e,this._http=n,this.router=r,this.apiService=o,this.DataListViaResolve=[],this.allData=[],this.SingledataEdit=[],this.listingPageUrl="",this.ButtonText="Submit",this.CategoryManagementTeamForm=this.fb.group({categoryName:["",a.Validators.required],description:["",a.Validators.required],status:[!0],role:[""]})}return Object.defineProperty(t.prototype,"TeamData",{set:function(t){this.DataListViaResolve=t||"<no name set>",this.DataListViaResolve=t,console.log("in ts ",this.DataListViaResolve)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"serverUrl",{set:function(t){this.serverUrlData=t||"<no name set>",this.serverUrlData=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"getDataEndpoint",{set:function(t){this.getDataEndpointData=t||"<no name set>",this.getDataEndpointData=t,console.log("data",this.getDataEndpointData)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"singleEditData",{set:function(t){this.SingledataEdit=t||"<no name set>",this.SingledataEdit=t,this.activeroute.snapshot.params._id&&(this.ButtonText="Update",this.params_id=this.activeroute.snapshot.params._id,this.CategoryManagementTeamForm.controls.categoryName.patchValue(t[0].categoryName),this.CategoryManagementTeamForm.controls.description.patchValue(t[0].description),this.CategoryManagementTeamForm.controls.status.patchValue(t[0].status))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"addEndpoint",{set:function(t){this.addEndpointData=t||"<no name set>",this.addEndpointData=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ListPageRoute",{set:function(t){this.listingPageUrl=t||"<no name set>",this.listingPageUrl=t},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;this.apiService.clearServerUrl(),setTimeout(function(){t.apiService.setServerUrl(t.serverUrlData)},50),this.apiService.clearaddEndpoint(),setTimeout(function(){t.apiService.setaddEndpoint(t.addEndpointData)},50),this.apiService.cleargetdataEndpoint(),setTimeout(function(){t.apiService.setgetdataEndpoint(t.getDataEndpointData)},50),setTimeout(function(){t.getData()},50)},t.prototype.inputUntouch=function(t,e){t.controls[e].markAsUntouched()},t.prototype.CategoryManagementTeamFormSubmit=function(){var t=this;if(this.CategoryManagementTeamForm.valid){var e,a=void 0;for(a in this.CategoryManagementTeamForm.controls)this.CategoryManagementTeamForm.controls[a].markAsTouched();this.CategoryManagementTeamForm.valid&&(this.CategoryManagementTeamForm.value.status?this.CategoryManagementTeamForm.value.status=parseInt("1"):this.CategoryManagementTeamForm.value.status=parseInt("0")),e=this.activeroute.snapshot.params._id?{source:"Team_category",data:{id:this.params_id,categoryName:this.CategoryManagementTeamForm.value.categoryName,description:this.CategoryManagementTeamForm.value.description,status:this.CategoryManagementTeamForm.value.status,role:this.CategoryManagementTeamForm.value.role}}:{source:"Team_category",data:this.CategoryManagementTeamForm.value},this.spinnerLoader=!0,this.apiService.addData(e).subscribe(function(e){t.spinnerLoader=!1,setTimeout(function(){t.router.navigateByUrl("/"+t.listingPageUrl)},100)})}},t.prototype.getData=function(){var t=this;this.apiService.getData({source:"rolemanagement"}).subscribe(function(e){var a=e;t.allData=a.res})},t.prototype.ResetTeamForm=function(){this.CategoryManagementTeamForm.reset()},t.decorators=[{type:e.Component,args:[{selector:"lib-addedit-team",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">Team Category Management</h2>\n  </mat-toolbar>\n\n  <span class="formspan">\n  <mat-card-content class="example-container">\n\n    \x3c!-- ----------form starts here------------------ --\x3e\n    <form class="example-form"\n    name="CategoryManagementTeamForm" (ngSubmit)="CategoryManagementTeamFormSubmit()"\n          [formGroup]="CategoryManagementTeamForm" >\n\n\n      \x3c!-- ---------------------input for role name---------------- --\x3e\n      <mat-form-field class="example-full-width">\n        <input matInput placeholder="Category Name" \n        [formControl]="CategoryManagementTeamForm.controls[\'categoryName\']"\n        (blur)="inputUntouch(CategoryManagementTeamForm,\'categoryName\')">\n        <mat-error *ngIf="CategoryManagementTeamForm.controls[\'categoryName\'].touched && !CategoryManagementTeamForm.controls[\'categoryName\'].valid\n               && CategoryManagementTeamForm.controls[\'categoryName\'].errors.required">\n              Category Name field can not be blank</mat-error>\n      </mat-form-field><br>\n\n      \x3c!-- -----------------------text area------------------------\x3e\n      <mat-form-field>\n        <textarea matInput placeholder="Description" \n        [formControl]="CategoryManagementTeamForm.controls[\'description\']"\n        (blur)="inputUntouch(CategoryManagementTeamForm,\'description\')"\n          ></textarea>\n          <mat-error *ngIf="CategoryManagementTeamForm.controls[\'description\'].touched && !CategoryManagementTeamForm.controls[\'description\'].valid\n          && CategoryManagementTeamForm.controls[\'description\'].errors.required">\n         Description field can not be blank</mat-error>\n      </mat-form-field><br>\n\n      \x3c!-- ------status for role-management---------- --\x3e\n      <mat-checkbox [formControl]="CategoryManagementTeamForm.controls[\'status\']" color="primary" >Active</mat-checkbox><br>\n\n      <mat-form-field>\n        <mat-label>Multiple Role</mat-label>\n        <mat-select formControlName="role" multiple >\n          <mat-option [value]=0>\n            Select a category\n          </mat-option>\n          <mat-option *ngFor="let f of allData" [value]="f.roleslug">\n        {{f.roleslug}}\n      </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      \x3c!-- -------------------button form submission----------------------- --\x3e\n      <button type="submit" class="submitbtn" mat-raised-button color="primary" >{{ButtonText}}</button>\n      \x3c!-- resetting the form --\x3e\n      <button type="button" class="submitbtn" mat-raised-button color="primary" (click)="ResetTeamForm()" >Reset</button>\n    </form>\n\n    \x3c!-- -----------------------form ends here---------------------\x3e\n  </mat-card-content>\n  \n\n</span>\n<mat-spinner  *ngIf="spinnerLoader"></mat-spinner>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}:host ::ng-deep .ck-editor__editable_inline{min-height:50px}"]}]}],t.ctorParameters=function(){return[{type:a.FormBuilder},{type:n.ActivatedRoute},{type:o.HttpClient},{type:n.Router},{type:at}]},t.propDecorators={TeamData:[{type:e.Input}],serverUrl:[{type:e.Input}],getDataEndpoint:[{type:e.Input}],singleEditData:[{type:e.Input}],addEndpoint:[{type:e.Input}],ListPageRoute:[{type:e.Input}]},t}();var lt=function(){function t(t){this.router=t,this.alldata=[],this.addPageVal="",this.searchingendpoint="",this.sourcenameViaapp="",this.tokenVal="",this.deleteendpointVal="",this.addupdate="",this.serverUrlData="",this.editRouteval="",this.alldata_skip=["_id","created_at"],this.alldata_modify_header={categoryName:"Category Name",description:"Description",rolename:"Role Name",status:"Status",role:"Role"},this.status=[{val:1,name:"Active"},{val:0,name:"Inactive"}],this.search_settings={selectsearch:[{label:"Search By Status",field:"status",values:this.status}],textsearch:[{label:"Search By Category Name",field:"categoryName"}]}}return Object.defineProperty(t.prototype,"TeamData",{set:function(t){this.alldata=t||"<no name set>",this.alldata=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"EditRoute",{set:function(t){this.editRouteval=t||"<no name set>",this.editRouteval=t,console.log(this.editRouteval)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"addButtonRoute",{set:function(t){this.addPageVal=t||"<no name set>",this.addPageVal=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"manageButtonRoute",{set:function(t){this.manageRoute=t||"<no name set>",this.manageRoute=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"UpdateRoute",{set:function(t){this.addupdate=t||"<no name set>",this.addupdate=t,console.log(this.addupdate)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Token",{set:function(t){this.tokenVal=t||"<no name set>",this.tokenVal=t,console.log(this.tokenVal)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SourceName",{set:function(t){this.sourcenameViaapp=t||"<no name set>",this.sourcenameViaapp=t,console.log(this.sourcenameViaapp)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SearchEndpoint",{set:function(t){this.searchingendpoint=t||"<no name set>",this.searchingendpoint=t,console.log(this.searchingendpoint)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DeleteEndpoint",{set:function(t){this.deleteendpointVal=t||"<no name set>",this.deleteendpointVal=t,console.log(this.deleteendpointVal)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"serverUrl",{set:function(t){this.serverUrlData=t||"<no name set>",this.serverUrlData=t,console.log(this.serverUrlData)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.addButton=function(){this.router.navigateByUrl("/"+this.addPageVal)},t.prototype.manageTeamButton=function(){this.router.navigateByUrl("/"+this.manageRoute)},t.decorators=[{type:e.Component,args:[{selector:"lib-list-team",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">Team Category Management List</h2>\n  </mat-toolbar>\n\n  \x3c!-- add button start here --\x3e\n  <mat-toolbar class="buttonsetToolbar">\n    <button class="singleButton" mat-raised-button color="primary" (click)="addButton()" >Add Team Category</button>\n    <button class="singleButton" mat-raised-button color="primary" (click)="manageTeamButton()" >Manage Team</button>\n\n  </mat-toolbar>\n\x3c!-- adding button end here --\x3e\n<mat-card-content class="listing-content-admin">\n \n  <lib-listing class="formfilterdiv formfilterdivnew" *ngIf="alldata.length>0" \n    [datasource]="alldata"\n    [sourcedata]="sourcenameViaapp"\n    [skip]="alldata_skip" \n    [modify_header_array]="alldata_modify_header" \n    [apiurl]="serverUrlData" \n    [editroute]="editRouteval"\n    [jwttoken]="tokenVal" \n    [statusarr]="status" \n    [updateendpoint]="addupdate"\n    [deleteendpoint]="deleteendpointVal"\n    [jwttoken]="tokenVal"\n    [date_search_endpoint]="searchingendpoint"\n    [date_search_source]="sourcenameViaapp"\n    [search_settings]="search_settings">\n</lib-listing>\n</mat-card-content>\n</mat-card>',styles:[".example-card{max-width:400px}.example-header-image{background-image:url(https://material.angular.io/assets/img/examples/shiba1.jpg);background-size:cover;border:2px solid #e0dada}.headerSpan{text-align:center;display:block;margin:auto}.darkToolbar{background-color:#000}.gridListWrapper{padding:30px}.buttonsetToolbar{background-color:#f4f3f8;text-align:center;display:block;padding-top:10px}.singleButton{margin:5px;float:right}.example-form{min-width:150px;max-width:500px;width:100%}.example-full-width{width:100%}td{padding-right:8px}"]}]}],t.ctorParameters=function(){return[{type:n.Router}]},t.propDecorators={TeamData:[{type:e.Input}],EditRoute:[{type:e.Input}],addButtonRoute:[{type:e.Input}],manageButtonRoute:[{type:e.Input}],UpdateRoute:[{type:e.Input}],Token:[{type:e.Input}],SourceName:[{type:e.Input}],SearchEndpoint:[{type:e.Input}],DeleteEndpoint:[{type:e.Input}],serverUrl:[{type:e.Input}]},t}();var st=function(){function t(t){this.router=t,this.DataList=[],this.serverUrlData="",this.tokenVal="",this.DelEndpoint="",this.editroute="",this.updatendpoint="",this.collectionName="",this.searchingSource="",this.searchingEndpoint="",this.addPageRoute="",this.data_skip=["_id","multipleemail","bulletarray"],this.data_modify_header={membername:"Member Name",description:"Description",categoryName:"Category Name",multiplephone:"Phone Numbers",images:"Images"},this.search_settings={textsearch:[{label:"Search By Category Name",field:"categoryname"},{label:"Search By Member Name",field:"membername"},{label:"Search By E-Mail",field:"multipleemail"}]},this.pendingmodelapplicationarray_detail_datatype=[{key:"images",value:"image",fileurl:"https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/team/"}]}return Object.defineProperty(t.prototype,"allData",{set:function(t){this.DataList=t||"<no name set>",this.DataList=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"serverUrl",{set:function(t){this.serverUrlData=t||"<no name set>",this.serverUrlData=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Token",{set:function(t){this.tokenVal=t||"<no name set>",this.tokenVal=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DeleteEndpoint",{set:function(t){this.DelEndpoint=t||"<no name set>",this.DelEndpoint=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"EditRoute",{set:function(t){this.editroute=t||"<no name set>",this.editroute=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"UpdateEndpoint",{set:function(t){this.updatendpoint=t||"<no name set>",this.updatendpoint=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SourceName",{set:function(t){this.collectionName=t||"<no name set>",this.collectionName=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SearchSourceName",{set:function(t){this.searchingSource=t||"<no name set>",this.searchingSource=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SearchEndpoint",{set:function(t){this.searchingEndpoint=t||"<no name set>",this.searchingEndpoint=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"AddPageRoute",{set:function(t){this.addPageRoute=t||"<no name set>",this.addPageRoute=t},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){console.log("this.preview_detail_listing"),console.log(this.pendingmodelapplicationarray_detail_datatype)},t.prototype.addButton=function(){this.router.navigateByUrl("/"+this.addPageRoute)},t.decorators=[{type:e.Component,args:[{selector:"lib-team-list",template:'\n<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">Team List</h2>\n  </mat-toolbar>\n\n\x3c!-- add button start here --\x3e\n<mat-toolbar class="buttonsetToolbar">\n  <button class="singleButton" mat-raised-button color="primary" (click)="addButton()" >Add Team Member</button>\n</mat-toolbar>\n\x3c!-- adding button end here --\x3e\n<mat-card-content class="listing-content-admin">\n  <lib-listing class="formfilterdiv formfilterdivnew" *ngIf="DataList.length>0" \n    [datasource]="DataList"\n    [jwttoken]="tokenVal" \n    [skip]="data_skip" \n    [modify_header_array]="data_modify_header" \n    [apiurl]="serverUrlData" \n    [deleteendpoint]="DelEndpoint"\n    [editroute]="editroute"\n    [updateendpoint]="updatendpoint"\n    [sourcedata]="collectionName"\n    [date_search_source]="searchingSource"\n    [date_search_endpoint]="searchingEndpoint"\n    [search_settings]="search_settings"\n    [detail_datatype]="pendingmodelapplicationarray_detail_datatype"\n   >\n</lib-listing>\n</mat-card-content>\n</mat-card>',styles:[".example-card{max-width:400px}.example-header-image{background-image:url(https://material.angular.io/assets/img/examples/shiba1.jpg);background-size:cover;border:2px solid #e0dada}.headerSpan{text-align:center;display:block;margin:auto}.darkToolbar{background-color:#000}.gridListWrapper{padding:30px}.buttonsetToolbar{background-color:#f4f3f8;text-align:center;display:block;padding-top:10px}.singleButton{margin:5px;float:right}.example-form{min-width:150px;max-width:500px;width:100%}.example-full-width{width:100%}td{padding-right:8px}"]}]}],t.ctorParameters=function(){return[{type:n.Router}]},t.propDecorators={allData:[{type:e.Input}],serverUrl:[{type:e.Input}],Token:[{type:e.Input}],DeleteEndpoint:[{type:e.Input}],EditRoute:[{type:e.Input}],UpdateEndpoint:[{type:e.Input}],SourceName:[{type:e.Input}],SearchSourceName:[{type:e.Input}],SearchEndpoint:[{type:e.Input}],AddPageRoute:[{type:e.Input}]},t}();var pt=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{declarations:[et,rt,it,lt,st],imports:[s.BrowserModule,a.FormsModule,a.ReactiveFormsModule,o.HttpClientModule,ot,Z.BrowserAnimationsModule,Y.ListingModule,$.FileUploadModule],providers:[at],exports:[et,rt,it,lt,st],schemas:[e.CUSTOM_ELEMENTS_SCHEMA]}]}],t}();t.TeamComponent=et,t.TeamModule=pt,t.TeamService=tt,t.ɵa=rt,t.ɵb=nt,t.ɵc=at,t.ɵd=it,t.ɵe=lt,t.ɵf=st,t.ɵg=ot,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=team.umd.min.js.map